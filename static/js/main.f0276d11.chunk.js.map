{"version":3,"sources":["logo.svg","ItemList.js","ItemsComponents.js","AccountPage.js","MessagePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","localizer","momentLocalizer","moment","RentersCalendar","props","handleSelect","start","end","console","log","startD","document","getElementById","startDay","getDate","startMonth","getMonth","endDay","endMonth","value","getFullYear","rentDetail","setState","startDate","endD","endDate","Date","setDate","setMonth","month","setFullYear","itemEvents","bookingString","item","booking","bookings","split","i","length","dates","substring","indexOf","startArr","endArr","Number","push","allDay","title","views","selectable","events","this","startAccessor","endAccessor","style","height","onSelectSlot","React","Component","ItemDescription","state","modelOpen","messageOpen","itemCalanderShown","ownsItem","application","user","userID","Card","Image","src","img","wrapped","ui","Content","Header","name","Description","description","dailyRate","replaceFee","tags","extra","className","Modal","open","trigger","Button","basic","color","onClick","Container","closeModal","user1","modalOpen","user2","account","accountid","Icon","Schedule","messgaes","chatID","userRentee","fetch","then","response","json","res","messages","formData","FormData","append","method","body","window","setTimeout","getChat","itemID","addBooking","sendMessage","marginTop","marginBottom","text","as","Form","Field","readOnly","required","type","id","onChange","handleRequest","Rent","validDates","getDaysBetween","total","months","includes","success","error","Message","header","content","Chat","userMessage","win","updateRead","event","key","msgDiv","scrollTop","scrollHeight","Grid","Column","floated","width","circular","clearTimeout","Segment","chat","onKeyPress","Messages","messageArray","message","sep","substr","currentUser","last","getMessages","ChatMessage","rentable","textAlign","re","RegExp","test","msg","itemNameStart","itemNameEnd","itemName","toIndex","forIndex","IDindex","amount","allow","Comment","Avatar","Author","Text","handleResponse","ItemModel","Navbar","imgPath","getMessagesFromServer","unread","forEach","lastU1seen","lastMessageTime","lastU2seen","Menu","widths","attached","Item","onMessagePage","padding","rounded","paddingRight","margin","navbar","Input","size","searchQuery","icon","placeholder","maxPrice","paddingLeft","signedIn","ItemsController","path","items","Array","bookedDates","postDataToServer","deleteDataFromServer","updateDataOnServer","UsersController","users","password","SignIn","userName","signedUp","loginFailed","userPassword","request","getDataFromServer","getUser","login","loginUser","status","endsWith","centered","colums","Row","columns","warning","handleLogin","handleSignUp","ContentComponent","plusShown","pictures","uploadFile","bind","username","tag","file","target","files","step","accept","handleSubmit","ItemList","gotItems","query","newItems","maxDailyRate","MAX_VALUE","isNaN","parseFloat","toLowerCase","tagFound","filterBySearchQuery","map","stretched","RatingRun","handleRate","e","rating","maxRating","Rating","onRate","defaultRating","seller","MyAccount","profile","payPal","amt","data","details","JSON","stringify","orderID","addFunds","alert","getUserImage","Divider","divided","htmlFor","display","onSuccess","handlePayment","options","clientId","TheirAccount","balance","getUserBalance","curUser","profUser","payField","updateBalance","payUser","Feedback","disabled","review","FeedbackController","feedbacks","feedback","FeedbackModel","object","FeedbackList","List","filter","AddFeedback","showForm","onSubmit","rows","ChatModel","user1ID","user2ID","lastMessage","U1Seen","U2Seen","chats","ChatStub","seen","otherUser","displayMessage","lastIndexOf","parseInt","hours","getHours","minutes","getMinutes","pmam","App","paddingTop","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0276d11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport {Comment, Icon, Card, Image, Input, Form, Button, Segment, Container, Header, Grid, Menu, Modal, Message } from 'semantic-ui-react';\r\nimport ImagesUploader from 'react-images-uploader';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nconst localizer = momentLocalizer(moment)\r\n\r\nclass RentersCalendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let day = 20;\r\n        let day2 = 27;\r\n        let month = 11;\r\n        let year = 2019;\r\n        let end = new Date();\r\n        let start = new Date();\r\n        end.setDate(day2);\r\n        end.setMonth(month - 1);\r\n        end.setFullYear(year);\r\n        start.setDate(day);\r\n        start.setMonth(month - 1);\r\n        start.setFullYear(year);\r\n        this.itemEvents = [];\r\n        this.bookingString =this.props.item.booking;\r\n        this.bookings = this.bookingString.split(\"||\");\r\n        for (let i = 1; i < this.bookings.length; i++ ) {\r\n            let dates = this.bookings[i].substring(this.bookings[i].indexOf(\"(\"));\r\n            let start = dates.substring(1, dates.indexOf(\",\"));\r\n            let end =  dates.substring( dates.indexOf(\",\") + 1, dates.indexOf(\")\"));\r\n            let startArr = start.split(\"-\");\r\n            let endArr = end.split(\"-\");\r\n            let endDate = new Date();\r\n            let startDate = new Date();\r\n            endDate.setDate(Number(endArr[2]));\r\n            endDate.setMonth(Number(endArr[1]) - 1);\r\n            endDate.setFullYear(Number(endArr[0]));\r\n            startDate.setDate(Number(startArr[2]));\r\n            startDate.setMonth(Number(startArr[1]) - 1);\r\n            startDate.setFullYear(Number(startArr[0]));\r\n            this.itemEvents.push({\r\n                allDay: true,\r\n                end: endDate,\r\n                start: startDate,\r\n                title: 'Booked',\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n  handleSelect = ({start, end}) => {\r\n    console.log(start);\r\n    console.log(end);\r\n    let startD = document.getElementById(\"startDateField\");\r\n\r\n    let startDay = start.getDate();\r\n    if (startDay < 10) {\r\n        startDay = \"0\"+startDay;\r\n    }\r\n\r\n    let startMonth = start.getMonth() + 1;\r\n    if (startMonth < 10) {\r\n        startMonth = \"0\"+startMonth;\r\n    }\r\n\r\n    let endDay = end.getDate();\r\n    if (endDay < 10) {\r\n        endDay = \"0\"+endDay;\r\n    }\r\n\r\n    let endMonth = end.getMonth() + 1;\r\n    if (endMonth < 10) {\r\n        endMonth = \"0\"+endMonth;\r\n    }\r\n\r\n    startD.value = start.getFullYear() + \"-\" + startMonth + \"-\" + startDay;\r\n    console.log(startD.value);\r\n    this.props.rentDetail.setState({startDate:startD.value});\r\n\r\n    let endD = document.getElementById(\"endDateField\");\r\n    endD.value = end.getFullYear() + \"-\" + endMonth + \"-\" + endDay;\r\n    console.log(endD.value);\r\n    this.props.rentDetail.setState({endDate:endD.value});\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Calendar\r\n          views = {['month']}\r\n          selectable\r\n          localizer={localizer}\r\n          events={this.itemEvents}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          style={{height: 500}}\r\n          onSelectSlot = {this.handleSelect}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport class ItemDescription extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modelOpen: false, messageOpen:false, itemCalanderShown:false };\r\n        this.ownsItem = this.props.application.state.user === this.props.item.userID;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n            <Image  src={`data:image/jpeg;base64,${this.props.item.img}`} wrapped ui={false}/>\r\n            <Card.Content>\r\n                <Card.Header> {this.props.item.name}</Card.Header>\r\n                <Card.Description><strong>Description: </strong>{this.props.item.description} </Card.Description>\r\n                <Card.Description><strong>Daily Rate: </strong>${this.props.item.dailyRate}</Card.Description>\r\n                <Card.Description><strong>Replace Fee: </strong>${this.props.item.replaceFee}</Card.Description>\r\n                <Card.Description><strong>Tags: </strong>{this.props.item.tags}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <div className='ui two buttons'>\r\n                  <Modal\r\n                      open={this.state.itemCalanderShown}\r\n                      trigger={\r\n                          <Button style={{'display':this.ownsItem ? 'inline':'none'}} basic color = 'blue' onClick={()=> {this.setState({itemCalanderShown:true});}}>Calander</Button>\r\n                      }\r\n                  >\r\n                      <Container>\r\n                          <Schedule closeModal={() => {this.setState({itemCalanderShown: false});}} application={this.props.application}\r\n                                item={this.props.item} user1={this.props.application.state.user}/>\r\n                      </Container>\r\n                  </Modal>\r\n                  <Modal\r\n                      open={this.state.modalOpen}\r\n                      trigger={\r\n                          <Button style={{'display':this.ownsItem ? 'none': 'inline'}} basic color = 'green' onClick={()=> {this.setState({modalOpen:true});}}>Rent</Button>\r\n                      }\r\n                  >\r\n                      <Container>\r\n                          <Rent closeModal={() => {this.setState({modalOpen: false});}} application={this.props.application}\r\n                                user2={this.props.item.userID} user1={this.props.application.state.user}\r\n                                  item={this.props.item} dailyRate={this.props.item.dailyRate}/>\r\n                      </Container>\r\n                  </Modal>\r\n                  <Modal\r\n                      open={this.state.messageOpen}\r\n                      trigger={\r\n                          <Button basic color ='red' onClick={()=> {this.setState({messageOpen:true});}}>Send Message</Button>\r\n                      }\r\n                  >\r\n                      <Container>\r\n                          <Chat closeModal={() => {this.setState({messageOpen: false});}} application={this.props.application}\r\n                              user2={this.props.item.userID} user1={this.props.application.state.user} item={this.props.item}/>\r\n                      </Container>\r\n                  </Modal>\r\n\r\n              </div>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a onClick= {()=>{this.props.application.setState({account: true, accountid: this.props.item.userID})}}>\r\n                <Icon name='user' />\r\n{this.props.item.userID}\r\n              </a>\r\n            </Card.Content>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nclass Schedule extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messgaes:\"\", chatID:0, userRentee:\"\", startDate:\"\", endDate:\"\"};\r\n    }\r\n\r\n    async getChat() {\r\n            try {\r\n                await fetch(`https://borrow-java.herokuapp.com/chat/user/`+this.props.user1 +'/'+this.state.userRentee+'/', )\r\n                    .then((response)=>{return response.json().then((res)=>{this.setState({messages:res[\"messages\"], chatID:res[\"chatID\"]})})});\r\n            } catch (e) {\r\n                console.log(e);\r\n                let formData = new FormData;\r\n                formData.append(\"user1ID\", this.props.user1);\r\n                formData.append(\"user2ID\", this.state.userRentee);\r\n                fetch(`https://borrow-java.herokuapp.com/chat/`, {method:'POST', body:formData});\r\n                window.setTimeout(function () {\r\n                    //wait for data to be sent to server\r\n                },2000);\r\n            } finally {\r\n                window.setTimeout(() => { this.getChat(); }, 200);\r\n            }\r\n    }\r\n\r\n    addBooking() {\r\n        let formData = new FormData;\r\n        formData.append(\"booking\", \"||\"+this.state.userRentee +\r\n            \":(\" + this.state.startDate + \",\" + this.state.endDate + \")\");\r\n        fetch('https://borrow-java.herokuapp.com/items/'+this.props.item.itemID +'/',{method:'PUT', body: formData});\r\n    }\r\n\r\n    sendMessage() {\r\n        if (this.state.chatID !== 0) {\r\n            let formData = new FormData;\r\n            formData.append(\"message\", \"||\"+ this.props.user1+\": \"+ \"I have confirmed your schedule to rent \"+ this.props.item.name + \" from \" +\r\n                this.state.startDate + \" to \" + this.state.endDate + \" if this is a mistake please message me ASAP\");\r\n            formData.append(\"senderID\", this.props.user1);\r\n            fetch('https://borrow-java.herokuapp.com/chat/'+this.state.chatID+'/',{method:'PUT', body: formData});\r\n            this.props.closeModal();\r\n        }\r\n    }\r\n\r\n    handleRequest() {\r\n        if (!(this.state.startDate===\"\" || this.state.endDate===\"\")) {\r\n            this.getChat().then(()=> {\r\n                this.addBooking();\r\n                this.sendMessage();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container style={{marginTop: '5%', marginBottom: '5%'}} text>\r\n                    <Header as='h2'>Item Schedule</Header>\r\n                    <RentersCalendar rentDetail={this} item={this.props.item}/>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Start Date</label>\r\n                            <input\r\n                                readOnly={true}\r\n                                required={true}\r\n                                type='date'\r\n                                name='startDate'\r\n                                id='startDateField'\r\n                                onChange={()=>{this.setState({startDate:document.getElementById(\"startDateField\").value})}}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>End Date</label>\r\n                            <input\r\n                                readOnly={true}\r\n                                required={true}\r\n                                type='date'\r\n                                name='endDate'\r\n                                id='endDateField'\r\n                                onChange={()=>{this.setState({endDate: document.getElementById(\"endDateField\").value})}}\r\n                            />\r\n                            <label>Requesting User</label>\r\n                            <input\r\n                                type='text'\r\n                                name='user'\r\n                                id='nameField'\r\n                                onChange={()=>{this.setState({userRentee: document.getElementById(\"nameField\").value})}}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                        <Button onClick={this.props.closeModal}>Cancel</Button>\r\n                        <Button onClick={()=>{this.handleRequest();}}>Add Reservation</Button>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Rent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages:\"\", chatID:0, validDates: null, startDate:\"\", endDate:\"\"};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getChat();\r\n    }\r\n\r\n    async getChat() {\r\n        try {\r\n            await fetch(`https://borrow-java.herokuapp.com/chat/user/`+this.props.user1 +'/'+this.props.user2+'/', )\r\n                .then((response)=>{return response.json().then((res)=>{this.setState({messages:res[\"messages\"], chatID:res[\"chatID\"]})})});\r\n        } catch (e) {\r\n            console.log(e);\r\n            let formData = new FormData;\r\n            formData.append(\"user1ID\", this.props.user1);\r\n            formData.append(\"user2ID\", this.props.user2);\r\n            fetch(`https://borrow-java.herokuapp.com/chat/`, {method:'POST', body:formData});\r\n            window.setTimeout(function () {\r\n                //wait for data to be sent to server\r\n            },2000);\r\n        } finally {\r\n            window.setTimeout(() => { this.getChat(); }, 200);\r\n        }\r\n    };\r\n\r\n    sendMessage() {\r\n        let formData = new FormData;\r\n        formData.append(\"message\", \"||\"+ this.props.user1+\": \"+ \"I would like to rent \"+ this.props.item.name+ \" from \" +\r\n                                this.state.startDate + \" to \" + this.state.endDate +\r\n            \" for $\" + this.props.dailyRate * this.getDaysBetween(this.state.startDate, this.state.endDate) + \" ID=\"+this.props.item.itemID);\r\n        formData.append(\"senderID\", this.props.user1);\r\n        fetch('https://borrow-java.herokuapp.com/chat/'+this.state.chatID+'/',{method:'PUT', body: formData});\r\n        this.props.closeModal();\r\n    }\r\n\r\n    handleRequest() {\r\n        if (this.state.startDate===\"\" || this.state.endDate===\"\") {\r\n            this.setState({validDates: false});\r\n        } else {\r\n            this.setState({validDates: true});\r\n            this.sendMessage();\r\n        }\r\n    }\r\n\r\n\r\n    getDaysBetween(start, end) {\r\n        if (this.state.startDate===\"\" || this.state.endDate===\"\") {\r\n            return 0;\r\n        }\r\n\r\n        console.log(start);\r\n        let startArr = start.split('-');\r\n        let endArr = end.split('-');\r\n        console.log(\"START\");\r\n        console.log(startArr);\r\n        console.log(\"END\");\r\n        console.log(endArr);\r\n\r\n        let total = 0;\r\n        total+= (endArr[0]-startArr[0])*365;\r\n        total+= (endArr[1]-startArr[1])*31;\r\n        total+=(endArr[2]-startArr[2]);\r\n        if (total < 0) {\r\n            return 0;\r\n        }\r\n        let months = [];\r\n        for (let i = startArr[1]; i < endArr[1]; i++) {\r\n            months.push(i);\r\n        }\r\n\r\n        if (months.includes(2)) {\r\n            total-=3;\r\n        }\r\n        if (months.includes(4)) {\r\n            total-=1;\r\n        }\r\n        if (months.includes(6)) {\r\n            total-=1;\r\n        }\r\n        if (months.includes(9)) {\r\n            total-=1;\r\n        }\r\n        if (months.includes(11)) {\r\n            total-=1;\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container style={{marginTop: '5%', marginBottom: '5%'}} text>\r\n                    <Header as='h2'>Request to Rent</Header>\r\n                    <RentersCalendar rentDetail={this} item={this.props.item}/>\r\n                    <p>Total Cost: ${this.props.dailyRate * this.getDaysBetween(this.state.startDate, this.state.endDate)}</p>\r\n                        <Form success={this.state.validDates!=null ? this.state.validDates : false} error={this.state.validDates!=null ? !this.state.validDates : false}>\r\n                            <Form.Field>\r\n                                <label>Start Date</label>\r\n                                <input\r\n                                    readOnly={true}\r\n                                    required={true}\r\n                                    type='date'\r\n                                    name='startDate'\r\n                                    id='startDateField'\r\n                                    onChange={()=>{this.setState({startDate:document.getElementById(\"startDateField\").value})}}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>End Date</label>\r\n                                <input\r\n                                    readOnly={true}\r\n                                    required={true}\r\n                                    type='date'\r\n                                    name='endDate'\r\n                                    id='endDateField'\r\n                                    onChange={()=>{this.setState({endDate: document.getElementById(\"endDateField\").value})}}\r\n                                />\r\n                            </Form.Field>\r\n                            <hr/>\r\n                            <Message\r\n                                success\r\n                                header='Rental message sent.'\r\n                                content=\"A message has been sent to the renter\"\r\n                            />\r\n                            <Message\r\n                                error\r\n                                header='Rental message failed.'\r\n                                content=\"Please select valid start and end dates.\"\r\n                            />\r\n                            <p>Total Cost: ${this.props.dailyRate * this.getDaysBetween(this.state.startDate, this.state.endDate)}</p>\r\n                            <Button onClick={()=>{this.handleRequest();}}>Request to Rent</Button>\r\n                            <Button onClick={this.props.closeModal}>Cancel</Button>\r\n                        </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages:\"\", chatID:0};\r\n        this.userMessage = \"\";\r\n        this.win = null;\r\n    }\r\n\r\n    updateRead() {\r\n        console.log(this.props.user1 + \" is reading\");\r\n        let formData = new FormData;\r\n        formData.append(\"userID\", this.props.user1);\r\n        fetch(\"https://borrow-java.herokuapp.com/chat/\"+this.state.chatID+'/user/', { method: \"PUT\", body: formData});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getChat();\r\n    }\r\n\r\n    async getChat() {\r\n        try {\r\n            await fetch(`https://borrow-java.herokuapp.com/chat/user/`+this.props.user1 +'/'+this.props.user2+'/', )\r\n                .then((response)=>{return response.json()\r\n                    .then((res)=>{\r\n                        this.setState({messages:res[\"messages\"], chatID:res[\"chatID\"]});\r\n                        this.updateRead();\r\n                    })});\r\n        } catch (e) {\r\n            console.log(e);\r\n            let formData = new FormData;\r\n            formData.append(\"user1ID\", this.props.user1);\r\n            formData.append(\"user2ID\", this.props.user2);\r\n            fetch(`https://borrow-java.herokuapp.com/chat/`, {method:'POST', body:formData});\r\n            window.setTimeout(function () {\r\n                //wait for data to be sent to server\r\n            },2000);\r\n        } finally {\r\n            this.win = window.setTimeout(() => { this.getChat(); }, 200);\r\n        }\r\n    };\r\n\r\n    sendMessage(event) {\r\n        if (this.userMessage !== \"\" && event.key === 'Enter') {\r\n            let formData = new FormData;\r\n            formData.append(\"message\", \"||\"+ this.props.user1 + \":\" + this.userMessage);\r\n            formData.append(\"senderID\",this.props.user1);\r\n            fetch('https://borrow-java.herokuapp.com/chat/'+this.state.chatID+'/',{method:'PUT', body: formData});\r\n            document.getElementById(\"messageField\").value = \"\";\r\n            let msgDiv = document.getElementById(\"msgDiv\");\r\n            if (msgDiv != null) {\r\n                msgDiv.scrollTop = msgDiv.scrollHeight;\r\n            }\r\n            this.userMessage=\"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Container style={{marginTop: '2%', marginBottom: '2%'}} text>\r\n                <Grid>\r\n                  <Grid.Column floated='left' width={5}>\r\n                    <Header as='h2'>Messaging: {this.props.user2}</Header>\r\n                  </Grid.Column>\r\n                  <Grid.Column floated='right' width={1}>\r\n                  <Button circular className = \"left floated\" onClick={()=>{window.clearTimeout(this.win); this.props.closeModal()}}><Icon name = 'close'/></Button>\r\n\r\n                  </Grid.Column>\r\n                </Grid>\r\n                    <Segment>\r\n                    <Messages user = {this.props.user1} messages={this.state.messages} item={this.props.item} chat={this}/>\r\n                    </Segment>\r\n\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <input\r\n                                type='text'\r\n                                name='message'\r\n                                id='messageField'\r\n                                onKeyPress={(event)=>{this.sendMessage(event)}}\r\n                                onChange={()=>{this.userMessage = document.getElementById(\"messageField\").value}}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    getMessages() {\r\n        let messageArray = this.props.messages.split(\"||\");\r\n        let messages = [];\r\n        for (let i = 0; i < messageArray.length; i++){\r\n            let message = messageArray[i];\r\n            if (message === \"\") {\r\n                continue;\r\n            }\r\n            let sep = message.indexOf(\":\");\r\n            let user = message.substr(0,sep);\r\n            message = message.substr(sep+1);\r\n            if (i === messageArray.length - 1) {\r\n                messages.push(<ChatMessage user = {user} message = {message} chat={this.props.chat}\r\n                                           currentUser = {this.props.user} last={true} item={this.props.item}/>)\r\n            } else {\r\n                messages.push(<ChatMessage user = {user} message = {message} chat={this.props.chat}\r\n                                           currentUser = {this.props.user} last={false} item={this.props.item}/>)\r\n            }\r\n\r\n        }\r\n        return messages;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n\r\n            <div id=\"msgDiv\" style={{'overflowY':'scroll', height:'50vh'}} >\r\n                {this.getMessages()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ChatMessage extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.rentable = false;\r\n      this.textAlign = \"right\";\r\n      if (this.props.currentUser === this.props.user) {\r\n          this.textAlign = \"left\"\r\n      }\r\n      let re = new RegExp(\"I would like to rent .* from .* to .* for .* ID=.*\");\r\n      if (this.props.last && re.test(this.props.message) && this.props.currentUser!==this.props.user) {\r\n          this.rentable = true;\r\n\r\n          let msg = this.props.message;\r\n          let itemNameStart = msg.indexOf(\"rent\") + 5;\r\n\r\n          msg = msg.substring(itemNameStart);\r\n          let itemNameEnd = msg.indexOf(\"from\");\r\n          this.itemName = msg.substring(0,itemNameEnd);\r\n\r\n          msg = msg.substring(itemNameEnd + 4);\r\n          let toIndex = msg.indexOf(\"to\");\r\n          this.startDate = msg.substring(0,toIndex);\r\n\r\n          msg = msg.substring(toIndex+2);\r\n          let forIndex = msg.indexOf(\"for\");\r\n          this.endDate = msg.substring(0,forIndex);\r\n\r\n          msg = msg.substring(forIndex+5);\r\n          let IDindex = msg.indexOf(\"ID=\");\r\n          this.amount = msg.substring(0,IDindex);\r\n\r\n          this.itemID = msg.substring(IDindex+3);\r\n\r\n\r\n      }\r\n  }\r\n\r\n  handleResponse(allow) {\r\n      if(allow) {\r\n          console.log(\"hi\");\r\n          this.addBooking().then(()=>{this.sendMessage(allow);});\r\n      } else {\r\n          this.sendMessage(allow);\r\n      }\r\n\r\n  }\r\n\r\n\r\n  async addBooking() {\r\n      let formData = new FormData;\r\n      formData.append(\"booking\", \"||\"+this.props.user +\r\n          \":(\" + this.startDate + \",\" + this.endDate + \")\");\r\n      await fetch('https://borrow-java.herokuapp.com/items/'+this.itemID +'/',{method:'PUT', body: formData});\r\n  }\r\n\r\n  sendMessage(allow) {\r\n        if (this.props.chat.state.chatID !== 0) {\r\n            let formData = new FormData;\r\n            if (allow) {\r\n                formData.append(\"message\", \"||\"+ this.props.currentUser+\": \"+ \"I have confirmed your request to rent \"+ this.itemName + \" from \" +\r\n                    this.startDate + \" to \" + this.endDate + \" please make the appropriate payment to my account within the next 24 hours.\");\r\n            } else {\r\n                formData.append(\"message\", \"||\"+ this.props.currentUser+\": \"+ \"I have denied your request to rent \"+ this.itemName + \" from \" +\r\n                    this.startDate + \" to \" + this.endDate );\r\n            }\r\n\r\n            formData.append(\"senderID\", this.props.currentUser);\r\n            fetch('https://borrow-java.herokuapp.com/chat/'+this.props.chat.state.chatID+'/',{method:'PUT', body: formData});\r\n        }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Comment style={{\"textAlign\":this.textAlign, \"padding\":\"2vh\"}}>\r\n  <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\r\n  <Comment.Content>\r\n        <Comment.Author as='a'>{this.props.user}</Comment.Author>\r\n        <Comment.Text>{this.props.message}</Comment.Text>\r\n        <button style={{'display':this.rentable ? 'inline':'none', 'backgroundColor':'green'}}\r\n        onClick={()=>{this.handleResponse(true)}}>Ok</button>\r\n        <button style={{'display':this.rentable ? 'inline':'none', 'backgroundColor':'red'}}\r\n        onClick={()=>{this.handleResponse(false)}}>No</button>\r\n  </Comment.Content>\r\n</Comment>\r\n\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Card, Image, Input, Form, Button, Segment, Container, Header, Grid, Menu, Modal, Message } from 'semantic-ui-react';\r\nimport ImagesUploader from 'react-images-uploader';\r\nimport {ItemDescription} from './ItemList.js'\r\n// Model\r\nclass ItemModel {\r\n    constructor(itemID, description, name, userID, replaceFee, dailyRate, tags, img, booking) {\r\n        this.itemID = itemID;\r\n        this.description = description;\r\n        this.name = name;\r\n        this.userID = userID;\r\n        this.replaceFee = replaceFee;\r\n        this.dailyRate = dailyRate;\r\n        this.tags = tags[0].split(', ');\r\n        this.img = img;\r\n        this.booking = booking;\r\n    }\r\n}\r\n\r\nexport class Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modalOpen: false, messages: 0, imgPath:\"message.png\"};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMessagesFromServer();\r\n    }\r\n\r\n    async getMessagesFromServer() {\r\n        let unread = 0;\r\n        const response = await (await fetch(\"https://borrow-java.herokuapp.com/chat/user/\" + this.props.user)).json();\r\n        response.forEach((chat) => {\r\n            if ((this.props.user === chat.user1 && chat.lastU1seen < chat.lastMessageTime)\r\n                || (this.props.user === chat.user2 && chat.lastU2seen < chat.lastMessageTime)) {\r\n                    unread+=1;\r\n            }\r\n        });\r\n        if (unread > 0) {\r\n            this.setState({messages:unread, imgPath:\"messageAlert.png\"})\r\n        } else {\r\n            this.setState({messages:unread, imgPath:\"message.png\"})\r\n        }\r\n        window.setTimeout(() => { this.getMessagesFromServer(); }, 200);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Menu widths={6} attached='top'>\r\n                <Menu.Item onClick={()=> {this.props.application.setState({account:false, onMessagePage:false})}}>\r\n                    <Container style={{padding: '1.5% 7.5% 1.5% 7.5%'}}>\r\n                        <Image src=\"brw.png\" rounded />\r\n                    </Container>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item style={{paddingRight: '15px'}}>\r\n                    <Modal\r\n                        open={this.state.modalOpen}\r\n                        trigger={\r\n\r\n                            <Button style={{margin: '2% 10% 2% 10%'}} onClick={() => {this.setState({modalOpen: true});}}>\r\n                                 <Button.Content>Add Item</Button.Content>\r\n                            </Button>\r\n                        }\r\n                    >\r\n                        <Container>\r\n                            <ContentComponent closeModal={() => {this.setState({modalOpen: false});}} application={this.props.application} navbar={this} />\r\n                        </Container>\r\n                    </Modal>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item>\r\n                    <Container>\r\n                        <Input\r\n                            size='mini'\r\n                            id='searchQuery'\r\n                            onChange={()=>{this.props.application.setState({searchQuery: document.getElementById(\"searchQuery\").value})}}\r\n                            icon={{ name: 'search', circular: true }}\r\n                            placeholder='Search...'\r\n                        />\r\n                        <Input\r\n                            style={{margin: '10px 10px 0px 10px'}}\r\n                            type='number'\r\n                            onChange={()=>{this.props.application.setState({maxPrice: document.getElementById(\"maxPrice\").value})}}\r\n                            size='mini'\r\n                            id='maxPrice'\r\n                            icon={{name: 'dollar sign'}}\r\n                            placeholder='Max Price'\r\n                        />\r\n                    </Container>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item style={{paddingLeft: '15px'}} onClick={()=> {this.props.application.setState({account:true, accountid : this.props.application.state.user, onMessagePage:false})}}>\r\n                    <Container>\r\n                        <span>User: {this.props.application.state.user}</span>\r\n                    </Container>\r\n                </Menu.Item>\r\n                <Menu.Item onClick={()=>{this.props.application.setState({onMessagePage:true, account:false, accountid:null});}}>\r\n                    <figure>\r\n                        <Image src={this.state.imgPath}/>\r\n                        <figcaption>{this.state.messages} unread messages</figcaption>\r\n                    </figure>\r\n                </Menu.Item>\r\n                <Menu.Item onClick={() => {this.props.application.setState({signedIn: false, user: null, accountid: null, account: false, onMessagePage: false});}}>Sign Out</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n// Model\r\nclass UserModel {\r\n    constructor(userID, name, sellerRating, buyerRating, img) {\r\n        this.userID = userID;\r\n        this.name = name;\r\n        this.sellerRating = sellerRating;\r\n        this.buyerRating = buyerRating;\r\n        this.img = img;\r\n    }\r\n}\r\n\r\n// Controller\r\nclass ItemsController {\r\n    static async getDataFromServer(path) {\r\n        let items = new Array();\r\n        const response = await (await fetch(path)).json();\r\n        response.forEach((item) => {\r\n            items.push(new ItemModel(item.itemID, item.description, item.name, item.userID, item.replaceFee, item.dailyRate, item.tags, item.img, item.bookedDates));\r\n        });\r\n        return items;\r\n    }\r\n\r\n    static postDataToServer = (formData) => {\r\n        return fetch(\"https://borrow-java.herokuapp.com/items\", { method: \"POST\", body: formData});\r\n    }\r\n\r\n    static deleteDataFromServer = (itemID) => {\r\n        return fetch(`https://borrow-java.herokuapp.com/items/${itemID}`, { method: \"DELETE\" });\r\n    }\r\n\r\n\r\n    static updateDataOnServer = (itemID, formData) => {\r\n        return fetch(`https://borrow-java.herokuapp.com/items/${itemID}`, { method: \"PUT\", body: formData });\r\n    }\r\n}\r\n\r\n// Controller\r\nclass UsersController {\r\n    static async getDataFromServer(id) {\r\n        let users = new Array();\r\n        const response = await (await fetch(`https://borrow-java.herokuapp.com/users/`)).json();\r\n        response.forEach((user) => {\r\n            users.push(user.userID);\r\n        });\r\n        return users;\r\n    }\r\n\r\n    static async getUser(userID) {\r\n       const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n       const json = await response.json();\r\n       return json['password'];\r\n    };\r\n\r\n    static async login(userID, password) {\r\n        let formData = new FormData();\r\n        formData.append(\"login\",userID);\r\n        formData.append(\"password\",password);\r\n        const response = await fetch(\"https://borrow-java.herokuapp.com/users/login\", {method:\"POST\", body:formData})\r\n        console.log(response);\r\n        return response;\r\n    }\r\n\r\n    static postDataToServer = (formData) => {\r\n        return fetch(\"https://borrow-java.herokuapp.com/users\", { method: \"POST\", body: formData});\r\n    };\r\n\r\n    static deleteDataFromServer = (userID) => {\r\n        return fetch(`https://borrow-java.herokuapp.com/users/${userID}`, { method: \"DELETE\" });\r\n    };\r\n\r\n    static updateDataOnServer = (userID, formData) => {\r\n        return fetch(`https://borrow-java.herokuapp.com/users/${userID}`, { method: \"PUT\", body: formData });\r\n    }\r\n}\r\n\r\n// Views\r\n\r\nexport class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.userName = \"\";\r\n        this.password = \"\";\r\n        this.state = { users: [], signedUp: null, loginFailed: null };\r\n        this.res = null;\r\n        this.userPassword = \"\";\r\n        this.request = null;\r\n    }\r\n\r\n    async getDataFromServer() {\r\n        this.setState({ users: await UsersController.getDataFromServer() });\r\n        // this.setState({ items: await (await fetch(\"/items\")).json() });\r\n        this.request = window.setTimeout(() => { this.getDataFromServer(); }, 200);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.request);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromServer();\r\n    }\r\n\r\n    async getUser(userID) {\r\n        this.userPassword = await  UsersController.getUser(userID);\r\n    }\r\n\r\n    async loginUser(userID, password) {\r\n        this.res = await UsersController.login(userID, password);\r\n    }\r\n\r\n    handleLogin() {\r\n        if (this.password ===\"\" || this.userName === \"\") {\r\n            // empty fields\r\n        } else {\r\n            this.loginUser(this.userName, this.password).then(()=>{\r\n                if (this.res.status == 200) {\r\n                    // valid user/pass\r\n                    console.log(\"Logging in.\");\r\n\r\n                    this.props.application.setState({signedIn:true, user:this.userName});\r\n                    this.setState({ signedUp: null });\r\n                    this.setState({ loginFailed: null });\r\n                } else {\r\n                    // invalid user/pass\r\n                    console.log(\"Invalid username or password.\");\r\n                    this.setState({ loginFailed: true });\r\n                    this.setState({ signedUp: null });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSignUp() {\r\n        if (this.password === \"\" || this.userName === \"\") {\r\n            // empty fields\r\n        } else {\r\n            if (this.userName.endsWith('@jhu.edu') || this.userName.endsWith('@jh.edu')) {\r\n                this.getUser(this.userName).then(() => {\r\n                    if (this.userPassword === \"\") {\r\n                        // Username available\r\n                        console.log(\"Creating new user.\");\r\n    \r\n                        const formData = new FormData();\r\n                        formData.append(\"userID\", this.userName);\r\n                        formData.append(\"password\", this.password);\r\n                        UsersController.postDataToServer(formData);\r\n                        this.setState({ signedUp: true, loginFailed: null });\r\n                    } else {\r\n                        // Username taken\r\n                        console.log(\"Tried to create new user. Email already in use.\");\r\n    \r\n                        this.setState({ signedUp: false, loginFailed: null });\r\n    \r\n                        console.log(this.state);\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({ signedUp: false, loginFailed: null});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid centered colums = {5}>\r\n                <Grid.Row centered columns = {2}>\r\n                    <Grid.Column>\r\n                        <Container textAlign = 'left'>\r\n                            <Form success={this.state.signedUp!=null ? this.state.signedUp : false} warning={this.state.signedUp!=null ? !this.state.signedUp : false} error={this.state.loginFailed!=null ? this.state.loginFailed : false}>\r\n                                <Header>Email:</Header>\r\n                                <Form.Input\r\n                                    required={true}\r\n                                    type='text'\r\n                                    name='username'\r\n                                    id=\"username\"\r\n                                    onChange={()=>{this.userName = document.getElementById(\"username\").value}}\r\n                                />\r\n                                <Header>Password:</Header>\r\n                                <Form.Input\r\n                                    required={true}\r\n                                    type='password'\r\n                                    name='password'\r\n                                    id=\"password\"\r\n                                    onChange={()=>{this.password = document.getElementById(\"password\").value}}\r\n                                />\r\n\r\n                                <hr/>\r\n                                <Message\r\n                                    success\r\n                                    header='Sign Up Complete.'\r\n                                    content=\"You're all signed up.\"\r\n                                />\r\n                                <Message\r\n                                    warning\r\n                                    header='Sign Up Failed.'\r\n                                    content=\"You entered a non-jhu email, or an email already in use.\"\r\n                                />\r\n                                <Message\r\n                                    error\r\n                                    header='Sign In Failed.'\r\n                                    content=\"Invalid email or password.\"\r\n                                />\r\n\r\n                                <Button onClick={()=>{this.handleLogin();}}>Login</Button>\r\n                                <Button onClick={()=>{this.handleSignUp();}}>Sign up</Button>\r\n                            </Form>\r\n                        </Container>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport class ContentComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { plusShown:true, pictures: []};\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.username = this.props.application.state.user;\r\n        this.description = \"\";\r\n        this.itemName = \"\";\r\n        this.replaceFee = 0;\r\n        this.dailyRate = 0;\r\n        this.tag = \"\";\r\n        this.tags = [];\r\n        this.formData = new FormData();\r\n    }\r\n\r\n\r\n    handleSubmit() {\r\n        this.setState({plusShown: true});\r\n        this.props.application.setState({signedIn:true, user:this.username});\r\n        this.tags.push(this.tag);\r\n        this.formData.append(\"identifier\",-1);\r\n        this.formData.append(\"description\", this.description);\r\n        this.formData.append(\"name\",this.itemName);\r\n        this.formData.append(\"username\",this.username);\r\n        this.formData.append(\"replaceFee\",this.replaceFee);\r\n        this.formData.append(\"dailyRate\",this.dailyRate);\r\n        this.formData.append(\"tags\", this.tags);\r\n        ItemsController.postDataToServer(this.formData);\r\n        this.props.closeModal();\r\n    }\r\n\r\n    handleFormChange() {\r\n        this.setState({plusShown:false});\r\n        this.props.application.setState({signedIn:true, user:this.username});\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({plusShown: true});\r\n        this.props.application.setState({signedIn:true, user:this.username});\r\n    }\r\n\r\n    uploadFile(event) {\r\n        let file = event.target.files[0];\r\n        console.log(file);\r\n\r\n        if (file) {\r\n            this.formData.append('image', file);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container style={{marginTop: '2%', marginBottom: '2%'}} text>\r\n                    <Header as='h2'>Adding an Item</Header>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Title</label>\r\n                            <input\r\n                                type='text'\r\n                                name='name'\r\n                                id=\"itemNameField\"\r\n                                onChange={()=>{this.itemName = document.getElementById(\"itemNameField\").value}}\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Description</label>\r\n                            <input\r\n                                type='text'\r\n                                name='description'\r\n                                id=\"descField\"\r\n                                onChange={()=>{this.description = document.getElementById(\"descField\").value}}\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Daily Rate</label>\r\n                            <input\r\n                                type='number'\r\n                                step=\"0.01\"\r\n                                name='dailyRate'\r\n                                id=\"dailyRateField\"\r\n                                onChange={()=>{this.dailyRate = document.getElementById(\"dailyRateField\").value}}\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Replacement Fee</label>\r\n                            <input\r\n                                type='number'\r\n                                step=\"0.01\"\r\n                                name='replaceFee'\r\n                                id=\"replacementField\"\r\n                                onChange={()=>{this.replaceFee = document.getElementById(\"replacementField\").value}}\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Tags</label>\r\n                            <input\r\n                                type='text'\r\n                                name='tag'\r\n                                id=\"tagField\"\r\n                                onChange={()=>{this.tag = document.getElementById(\"tagField\").value}}\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Images</label>\r\n                            <input\r\n                                type='file'\r\n                                accept='image/jpeg, image/png'\r\n                                name='image'\r\n                                id='imageField'\r\n                                onChange={this.uploadFile}\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Button onClick={()=>{this.handleSubmit();}}>Submit</Button>\r\n                        <Button onClick={()=>{this.props.navbar.setState({modalOpen: false});}}>Cancel</Button>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ItemList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { items: [] };\r\n    }\r\n\r\n    filterBySearchQuery(gotItems, query, maxPrice) {\r\n        let newItems = [];\r\n\r\n        let maxDailyRate = Number.MAX_VALUE;\r\n        if (maxPrice != '' && isNaN(parseFloat(maxPrice)) != true) {\r\n            maxDailyRate = parseFloat(maxPrice);\r\n        }\r\n\r\n        gotItems.forEach((item) => {\r\n            if (item.dailyRate <= maxDailyRate) {\r\n                if (item.name.toLowerCase().includes(query.toLowerCase()) || query.toLowerCase().includes(item.name.toLowerCase())) {\r\n                    newItems.push(item);\r\n                } else if (item.description.toLowerCase().includes(query.toLowerCase()) || query.toLowerCase().includes(item.description.toLowerCase())) {\r\n                    newItems.push(item);\r\n                } else if (item.userID.toLowerCase().includes(query.toLowerCase()) || query.toLowerCase().includes(item.userID.toLowerCase())){\r\n                    newItems.push(item);\r\n                } else {\r\n                    let tagFound = false;\r\n                    item.tags.forEach((tag) => {\r\n                        console.log(tag, query);\r\n                        if (tag.toLowerCase().includes(query.toLowerCase()) || query.toLowerCase().includes(tag.toLowerCase())) {\r\n                            console.log(\"YUP\");\r\n                            tagFound = true;\r\n                        }\r\n                    });\r\n                    if (tagFound) {\r\n                        newItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return newItems;\r\n    }\r\n\r\n    async getDataFromServer() {\r\n        let path;\r\n        if (this.props.user == null) {\r\n            path = \"https://borrow-java.herokuapp.com/items\";\r\n        } else {\r\n            path = \"https://borrow-java.herokuapp.com/items/user/\"+ this.props.user;\r\n        }\r\n\r\n        let gotItems = await ItemsController.getDataFromServer(path);\r\n\r\n        gotItems = this.filterBySearchQuery(gotItems, this.props.searchQuery, this.props.maxPrice);\r\n\r\n        this.setState({ items: gotItems });\r\n        // this.setState({ items: await (await fetch(\"/items\")).json() });\r\n\r\n        // onsole.log(this.state.items);\r\n        window.setTimeout(() => { this.getDataFromServer(path); }, 200);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromServer();\r\n    }\r\n\r\n    render() {\r\n        return <Container style={{marginTop: '10px'}}><Grid columns = {4}>{this.state.items.map(item => <Item key={item.itemID} item={item} application={this.props.application}/>)}</Grid> </Container>;\r\n    }\r\n}\r\n\r\nclass Item extends React.Component {\r\n    render() {\r\n        return (\r\n            <Grid.Column stretched>\r\n                <ItemDescription item={this.props.item} application={this.props.application}/>\r\n            </Grid.Column>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Image, Icon, Input, Form, Button, Segment, Container, Header, Grid, Menu, Modal, Message, List, Card , Rating, Divider} from 'semantic-ui-react';\r\nimport { SignIn, ItemList, ContentComponent, Navbar } from './ItemsComponents';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MyCalendar = props => (\r\n  <div>\r\n    <Calendar\r\n      views = {['month']}\r\n      selectable\r\n      localizer={localizer}\r\n      events={[]}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n      style={{height: 500}}\r\n    />\r\n  </div>\r\n);\r\n\r\nclass RatingRun extends React.Component {\r\n  state = {}\r\n\r\n  handleRate = (e, { rating, maxRating }) =>\r\n    this.setState({ rating, maxRating })\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Modal trigger={<Rating icon='star' onRate={this.handleRate} defaultRating={0} maxRating={5} size = 'massive'/>}>\r\n      <Modal.Content>\r\n      <AddFeedback rating = {this.state.rating} userID={this.props.userID} seller = {this.props.seller}></AddFeedback>\r\n      </Modal.Content>\r\n      </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport class MyAccount extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.formData = new FormData;\r\n        this.state = {profile:'', payPal: false};\r\n        this.amt = 0;\r\n    }\r\n\r\n    handlePayment(data, details) {\r\n        fetch(\"/paypal-transaction-complete\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                orderID: data.orderID,\r\n                details: details\r\n            })\r\n        }).then(()=>{this.addFunds(); this.setState({payPal:false})});\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.updateDataOnServer(this.props.user ,this.formData);\r\n    }\r\n\r\n    updateDataOnServer(userID, formData) {\r\n        return fetch(`https://borrow-java.herokuapp.com/users/${userID}`, { method: \"PUT\", body: formData });\r\n    }\r\n\r\n    uploadFile(event) {\r\n        let file = event.target.files[0];\r\n\r\n        if (file) {\r\n            this.formData.append('image', file);\r\n        }\r\n    }\r\n\r\n    addFunds() {\r\n        console.log(\"funds to be added\");\r\n        //TODO:replace with paypal logic\r\n        this.setState({payPal:true});\r\n        let user = this.props.application.state.user;\r\n\r\n        let formData = new FormData;\r\n        formData.append(\"amount\", this.amt);\r\n        fetch(\"https://borrow-java.herokuapp.com/users/\"+user, { method: \"PUT\", body: formData});\r\n        alert(\"funds added\");\r\n        let payField = document.getElementById(\"payAmt\");\r\n        payField.value = 0;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserImage(this.props.user)\r\n    }\r\n\r\n\r\n    async getUserImage(userID) {\r\n        const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n        const json = await response.json();\r\n        this.setState({profile:json['img']});\r\n        window.setTimeout(() => { this.getUserImage(userID); }, 200);\r\n    };\r\n\r\n    render() {\r\n    return(\r\n      <Container>\r\n      <Divider />\r\n\r\n      <Grid  centered columns = {2} divided>\r\n      <Grid.Row>\r\n      <Grid.Column>\r\n      <Header as='h1'>{this.props.application.state.accountid} </Header>\r\n      <Image src={`data:image/jpeg;base64,${this.state.profile}`}  size='medium' circular />\r\n\r\n        <Form.Field>\r\n\r\n\r\n          <Button as=\"label\" htmlFor=\"file\" type=\"button\"> + </Button>\r\n            <input\r\n                type='file'\r\n                accept='image/jpeg, image/png'\r\n                name='image'\r\n                id='file'\r\n                style={{ display: \"hidden\" }}\r\n                onChange={this.uploadFile}\r\n            />\r\n\r\n            <input style={this.state.payPal ? {'display': 'none'} : {}} id=\"payAmt\" placeholder=\"$0.00\" type=\"number\" onChange={()=>{this.amt = document.getElementById('payAmt').value}}/>\r\n            <button style={this.state.payPal ? {'display': 'none'} : {}} onClick={()=>{this.setState({payPal: this.amt !== 0})}}>ADD FUNDS</button>\r\n            <div style={!this.state.payPal ? {'display': 'none'} : {}}>\r\n                <h1>Adding {this.amt} funds to your account</h1>\r\n                <PayPalButton\r\n                    amount={this.amt}\r\n                    onSuccess={(details, data) => {this.handlePayment(data, details)}}\r\n                    options={{\r\n                        clientId: \"ATgUSG3PV1TgX6iuxa6TEb9lal8bzT2QRjX-vHKNN2fKn5oQGXTqmsxPbAn-m9N3QAR9RvymheFYRJvd\"\r\n                    }}/>\r\n            </div>\r\n\r\n        </Form.Field>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      </Grid>\r\n      <Divider />\r\n\r\n      </Container>\r\n\r\n  )\r\n  }\r\n}\r\n\r\nexport class TheirAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {profile:'', balance:0}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserImage(this.props.user);\r\n        this.getUserBalance(this.props.application.state.user);\r\n    }\r\n\r\n    updateBalance(user, amt) {\r\n        let formData = new FormData;\r\n        formData.append(\"amount\", amt);\r\n        fetch(\"https://borrow-java.herokuapp.com/users/\"+user, { method: \"PUT\", body: formData});\r\n    }\r\n\r\n    payUser() {\r\n        var curUser = this.props.application.state.user;\r\n        var profUser = this.props.application.state.accountid;\r\n        let payField = document.getElementById(\"payAmt\");\r\n        var amt = payField.value;\r\n        payField.value = 0;\r\n\r\n        if (this.state.balance < amt) {\r\n            alert(\"Your Balance is too low!\");\r\n        } else {\r\n            this.updateBalance(curUser, -1*amt);\r\n            this.updateBalance(profUser, amt);\r\n            alert(\"Paid\");\r\n        }\r\n\r\n    }\r\n\r\n    async getUserImage(userID) {\r\n        const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n        const json = await response.json();\r\n        this.setState({profile:json['img']});\r\n\r\n        window.setTimeout(() => { this.getUserImage(userID); }, 200);\r\n    }\r\n\r\n    async getUserBalance(userID) {\r\n        const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n        const json = await response.json();\r\n        this.setState({balance:json['balance']});\r\n\r\n        window.setTimeout(() => { this.getUserBalance(userID); }, 200);\r\n    }\r\n\r\n    render () {\r\n        return(\r\n\r\n          <div>\r\n              <Image src={`data:image/jpeg;base64,${this.state.profile}`} wrapped ui={false} height={100} width={100}/>\r\n              <h1>{this.props.application.state.accountid} </h1>\r\n              <input id=\"payAmt\" placeholder=\"$0.00\" type=\"number\"/>\r\n              <button onClick={()=>{this.payUser()}}>PAY ME</button>\r\n              <Grid.Column>\r\n                  <Header> Renter Rating </Header>\r\n                  <RatingRun userID={this.props.user} seller = {0}/>\r\n                  <Modal trigger={<Button>Show Renter Reviews</Button>}>\r\n                      <Modal.Content>\r\n\r\n                          <FeedbackList seller={0} userID={this.props.user}></FeedbackList>\r\n                      </Modal.Content>\r\n\r\n                  </Modal>\r\n\r\n                  <Header> Rentee Rating </Header>\r\n                  <RatingRun userID={this.props.user} seller = {1}/>\r\n\r\n                  <Modal trigger={<Button>Show Rentee Reviews</Button>}>\r\n                      <Modal.Content>\r\n                          <FeedbackList seller={1} userID={this.props.user}></FeedbackList>\r\n                      </Modal.Content>\r\n\r\n                  </Modal>\r\n\r\n\r\n              </Grid.Column>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Feedback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n      <Card.Content>\r\n      <Rating icon='star' defaultRating={this.props.rating} maxRating={5} size = 'large' disabled/>\r\n      </Card.Content>\r\n      <Card.Content description={`${this.props.review}`}/>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nclass FeedbackController {\r\n  static async getDataFromServer(path) {\r\n    let feedbacks = new Array();\r\n    const response = await (await fetch(path)).json();\r\n    response.forEach((feedback) => {\r\n      feedbacks.push(new FeedbackModel(feedback.rating, feedback.review, feedback.seller));\r\n    });\r\n    return feedbacks;\r\n  }\r\n\r\n  static postDataToServer = (formData, userID) => {\r\n    var object = {};\r\n    formData.forEach((value, key) => {object[key] = value});\r\n    var json = JSON.stringify(object);\r\n    return fetch(`https://borrow-java.herokuapp.com/users/${userID}/feedback`, { method: \"POST\", body: formData});\r\n  }\r\n}\r\n\r\nclass FeedbackModel {\r\n  constructor(rating, review, seller, id) {\r\n    this.id = id;\r\n    this.rating = rating;\r\n    this.review = review;\r\n    this.seller = seller;\r\n  }\r\n}\r\n\r\nexport class FeedbackList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { feedbacks: [], seller : this.props.seller };\r\n  }\r\n\r\n  async getDataFromServer() {\r\n    let path = `https://borrow-java.herokuapp.com/users/${this.props.userID}/feedback`;\r\n    let feedbacks = await FeedbackController.getDataFromServer(path)\r\n    this.setState({feedbacks: feedbacks});\r\n  }\r\n\r\n  toggleBuyerSeller () {\r\n    if (this.state.seller == 1) {\r\n      this.setState({seller : 0})\r\n    } else {\r\n      this.setState({seller : 1})\r\n    }\r\n    this.getDataFromServer();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataFromServer();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Header>Reviews</Header>\r\n        <List>\r\n          {this.state.feedbacks\r\n            .filter(feedback => feedback.seller == this.state.seller)\r\n            .map(feedback => <Feedback key={feedback.id} rating={feedback.rating} review={feedback.review}/>)}\r\n        </List>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nclass AddFeedback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {showForm : false, rating: this.props.rating, review: '', seller: this.props.seller};\r\n    this.formData = new FormData;\r\n  }\r\n\r\n  async handleSubmit(userID) {\r\n    this.formData.append('rating', this.state.rating);\r\n    this.formData.append('review', this.review);\r\n    this.formData.append('seller', this.state.seller);\r\n    await FeedbackController.postDataToServer(this.formData, userID);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Header as='h2' icon>\r\n        <Icon name='settings' />\r\n        Add a review!</Header>\r\n        <Form onSubmit={() => {this.handleSubmit(this.props.userID);}}>\r\n          <Form.Field required>\r\n            <label>Review:</label>\r\n            <Input\r\n              type='textarea'\r\n              id='review'\r\n              rows='3'\r\n              onChange={()=>{this.review = document.getElementById(\"review\").value}}/>\r\n          </Form.Field>\r\n          <Form.Button content='Submit'/>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Button, Container, Grid, Modal, Segment} from \"semantic-ui-react\";\r\nimport {Chat} from \"./ItemList\";\r\n\r\nclass ChatModel {\r\n    constructor(chatID, messages, user1ID, user2ID, lastMessage, U1Seen, U2Seen) {\r\n        this.chatID = chatID;\r\n        this.messages = messages;\r\n        this.user1ID = user1ID;\r\n        this.user2ID = user2ID;\r\n        this.lastMessage = lastMessage;\r\n        this.U1Seen = U1Seen;\r\n        this.U2Seen = U2Seen;\r\n    }\r\n}\r\n\r\nexport class Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { chats: [] };\r\n    }\r\n\r\n    async getDataFromServer() {\r\n        let chats = new Array();\r\n        const response = await (await fetch(\"http://localhost:7000/chat/user/\" + this.props.user)).json();\r\n        response.forEach((chat) => {\r\n            chats.push(new ChatModel(chat.chatID, chat.messages, chat.user1, chat.user2, chat.lastMessageTime, chat.lastU1seen, chat.lastU2seen));\r\n        });\r\n        this.setState({chats:chats});\r\n        window.setTimeout(() => { this.getDataFromServer(); }, 200);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDataFromServer();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{marginTop: '10px'}}>Messages</h2>\r\n                {this.state.chats.map(chat => <ChatStub chat={chat} user={this.props.user}/>)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass ChatStub extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={messageOpen:false};\r\n        this.seen = false;\r\n\r\n        this.otherUser = this.props.chat.user1ID;\r\n        if (this.props.chat.user1ID === this.props.user) {\r\n            this.otherUser = this.props.chat.user2ID;\r\n        }\r\n\r\n        this.displayMessage = this.props.chat.messages.substring(this.props.chat.messages.lastIndexOf(\":\") + 1);\r\n\r\n        this.seen = true;\r\n        if (this.props.user === this.props.chat.user1ID && this.props.chat.U1Seen < this.props.chat.lastMessage) {\r\n            this.seen = false;\r\n        } else if (this.props.user === this.props.chat.user2ID && this.props.chat.U2Seen < this.props.chat.lastMessage) {\r\n            this.seen = false;\r\n        }\r\n\r\n        this.lastMessageTime = new Date(parseInt(this.props.chat.lastMessage));\r\n        this.hours = this.lastMessageTime.getHours() % 12 == 0 ? 12 : this.lastMessageTime.getHours() % 12;\r\n        this.minutes = this.lastMessageTime.getMinutes();\r\n        this.pmam = this.lastMessageTime.getHours() > 11 ? 'AM' : 'PM';\r\n    }\r\n    render() {\r\n        return(\r\n            <div  style={{ 'cursor': 'pointer', 'marginTop': '10px', 'fontWeight': this.seen ? 'normal': 'bold' }}>\r\n                <Modal\r\n                    open={this.state.messageOpen}\r\n                    trigger={\r\n                        <Segment onClick={()=> {this.setState({messageOpen:true});}}>\r\n                            <div>\r\n                                <p>{this.otherUser}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p>{this.hours}:{this.minutes} {this.pmam}</p>\r\n                                <p>{this.displayMessage}</p>\r\n                            </div>\r\n                        </Segment>\r\n                    }\r\n                >\r\n                    <Container>\r\n                        <Chat closeModal={() => {this.setState({messageOpen: false}); this.seen = true}} application={this.props.application} user2={this.otherUser} user1={this.props.user}/>\r\n                    </Container>\r\n              </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { SignIn, ItemList, ContentComponent, Navbar } from './ItemsComponents';\r\nimport { Image, Button, Container } from 'semantic-ui-react';\r\nimport { MyAccount } from './AccountPage.js'\r\nimport {TheirAccount} from \"./AccountPage\";\r\nimport {Messages} from \"./MessagePage\";\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {signedIn:false, user:null, searchQuery: '', account: false, accountid: null, maxPrice: '', onMessagePage: false }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    if (!this .state.signedIn) {\r\n        //sign in page\r\n      return (\r\n        <div style={{paddingTop: '5px'}}>\r\n          <Header/>\r\n          <SignIn application={this}/>\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      if(this.state.account && this.state.accountid === this.state.user) {\r\n        return (\r\n            //my account page\r\n          <Container style={{paddingTop: '5px'}}>\r\n            <Navbar application={this} user={this.state.user}/>\r\n            <MyAccount application = {this} user={this.state.accountid}/>\r\n            <ItemList searchQuery={this.state.searchQuery} maxPrice={this.state.maxPrice} application={this} user={this.state.accountid}/>\r\n          </Container>\r\n\r\n        );\r\n      } else if (this.state.account && this.state.accountid !== this.state.user) {\r\n          return (\r\n              //their account page\r\n              <Container style={{paddingTop: '5px'}}>\r\n                  <Navbar application={this} user={this.state.user}/>\r\n                  <TheirAccount application = {this} user={this.state.accountid}/>\r\n                  <ItemList searchQuery={this.state.searchQuery} maxPrice={this.state.maxPrice} application={this} user={this.state.accountid}/>\r\n              </Container>\r\n\r\n          );\r\n      } else if (this.state.onMessagePage) {\r\n          //message page\r\n          return (\r\n              <Container style={{paddingTop: '5px'}}>\r\n                  <Navbar application={this} user={this.state.user}/>\r\n                  <Messages user={this.state.user}/>\r\n              </Container>\r\n          )\r\n\r\n      } else {\r\n        return (\r\n            //main page\r\n          <Container style={{paddingTop: '5px'}}>\r\n            <Navbar application={this} user={this.state.user} />\r\n            <ItemList searchQuery={this.state.searchQuery} maxPrice={this.state.maxPrice} application={this} user={null}/>\r\n          </Container>\r\n\r\n        );\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <Container textAlign = \"center\">\r\n      <h1>Borrow</h1>\r\n      <h4><small>Peer to peer, cloud based, clothing rental built with AI solutions.</small></h4>\r\n    <br></br>\r\n    </Container>\r\n  </header>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}