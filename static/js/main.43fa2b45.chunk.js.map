{"version":3,"sources":["logo.svg","ItemList.js","ItemsComponents.js","AccountPage.js","MessagePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","localizer","momentLocalizer","moment","RentersCalendar","props","handleSelect","start","end","console","log","startD","document","getElementById","startDay","getDate","startMonth","getMonth","endDay","endMonth","value","getFullYear","rentDetail","setState","startDate","endD","endDate","Date","setDate","setMonth","month","setFullYear","itemEvents","bookingString","item","booking","bookings","split","i","length","dates","substring","indexOf","startArr","endArr","Number","push","allDay","title","views","selectable","events","this","startAccessor","endAccessor","style","height","onSelectSlot","React","Component","ItemDescription","state","modelOpen","messageOpen","itemCalendarShown","ownsItem","application","user","userID","itemID","fetch","method","Card","Image","src","img","wrapped","ui","Content","Header","name","Description","description","dailyRate","replaceFee","tags","extra","className","Modal","open","trigger","Button","basic","color","onClick","Container","closeModal","user1","modalOpen","user2","deleteItem","account","accountid","Icon","Schedule","messgaes","chatID","userRentee","then","response","json","res","messages","formData","FormData","append","body","window","setTimeout","getChat","addBooking","sendMessage","marginTop","marginBottom","text","as","Form","Field","readOnly","required","type","id","onChange","handleRequest","Rent","validDates","getDaysBetween","total","months","includes","success","error","Message","header","content","Chat","userMessage","win","updateRead","event","key","msgDiv","scrollTop","scrollHeight","Grid","Column","floated","width","circular","clearTimeout","Segment","chat","onKeyPress","Messages","messageArray","message","sep","substr","currentUser","last","getMessages","ChatMessage","rentable","textAlign","re","RegExp","test","msg","itemNameStart","itemNameEnd","itemName","toIndex","forIndex","IDindex","amount","allow","Comment","Avatar","Author","Text","cleanMessage","handleResponse","ItemModel","Navbar","imgPath","getMessagesFromServer","unread","forEach","lastU1seen","lastMessageTime","lastU2seen","Menu","widths","attached","Item","onMessagePage","padding","rounded","paddingRight","margin","navbar","Input","size","searchQuery","icon","placeholder","maxPrice","paddingLeft","signedIn","ItemsController","path","items","Array","bookedDates","postDataToServer","deleteDataFromServer","updateDataOnServer","UsersController","users","password","SignIn","userName","signedUp","loginFailed","userPassword","getDataFromServer","getUser","login","loginUser","status","endsWith","centered","colums","Row","columns","warning","handleLogin","handleSignUp","ContentComponent","plusShown","pictures","uploadFile","bind","username","tag","file","target","files","step","accept","handleSubmit","ItemList","gotItems","query","newItems","maxDailyRate","MAX_VALUE","isNaN","parseFloat","toLowerCase","tagFound","filterBySearchQuery","map","stretched","RatingRun","handleRate","e","rating","maxRating","Rating","onRate","defaultRating","seller","MyAccount","profile","payPal","balance","amt","email","data","details","JSON","stringify","orderID","addFunds","pre_request","headers","access_token","responseData","x","now","request","balance_response","old_balance","ok","alert","getUserBalance","getUserImage","Divider","divided","onSuccess","handlePayment","options","clientId","withdrawFunds","TheirAccount","curUser","profUser","payField","updateBalance","payUser","Feedback","disabled","review","FeedbackController","feedbacks","feedback","FeedbackModel","object","FeedbackList","List","filter","AddFeedback","showForm","onSubmit","rows","ChatModel","user1ID","user2ID","lastMessage","U1Seen","U2Seen","chats","ChatStub","seen","otherUser","displayMessage","lastIndexOf","parseInt","hours","getHours","minutes","getMinutes","pmam","App","paddingTop","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43fa2b45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport {Comment, Icon, Card, Image, Input, Form, Button, Segment, Container, Header, Grid, Menu, Modal, Message } from 'semantic-ui-react';\r\nimport ImagesUploader from 'react-images-uploader';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nconst localizer = momentLocalizer(moment)\r\n\r\nclass RentersCalendar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let day = 20;\r\n        let day2 = 27;\r\n        let month = 11;\r\n        let year = 2019;\r\n        let end = new Date();\r\n        let start = new Date();\r\n        end.setDate(day2);\r\n        end.setMonth(month - 1);\r\n        end.setFullYear(year);\r\n        start.setDate(day);\r\n        start.setMonth(month - 1);\r\n        start.setFullYear(year);\r\n        this.itemEvents = [];\r\n        this.bookingString =this.props.item.booking;\r\n        this.bookings = this.bookingString.split(\"||\");\r\n        for (let i = 1; i < this.bookings.length; i++ ) {\r\n            let dates = this.bookings[i].substring(this.bookings[i].indexOf(\"(\"));\r\n            let start = dates.substring(1, dates.indexOf(\",\"));\r\n            let end =  dates.substring( dates.indexOf(\",\") + 1, dates.indexOf(\")\"));\r\n            let startArr = start.split(\"-\");\r\n            let endArr = end.split(\"-\");\r\n            let endDate = new Date();\r\n            let startDate = new Date();\r\n            endDate.setDate(Number(endArr[2]));\r\n            endDate.setMonth(Number(endArr[1]) - 1);\r\n            endDate.setFullYear(Number(endArr[0]));\r\n            startDate.setDate(Number(startArr[2]));\r\n            startDate.setMonth(Number(startArr[1]) - 1);\r\n            startDate.setFullYear(Number(startArr[0]));\r\n            this.itemEvents.push({\r\n                allDay: true,\r\n                end: endDate,\r\n                start: startDate,\r\n                title: 'Booked',\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n  handleSelect = ({start, end}) => {\r\n    console.log(start);\r\n    console.log(end);\r\n    let startD = document.getElementById(\"startDateField\");\r\n\r\n    let startDay = start.getDate();\r\n    if (startDay < 10) {\r\n        startDay = \"0\"+startDay;\r\n    }\r\n\r\n    let startMonth = start.getMonth() + 1;\r\n    if (startMonth < 10) {\r\n        startMonth = \"0\"+startMonth;\r\n    }\r\n\r\n    let endDay = end.getDate();\r\n    if (endDay < 10) {\r\n        endDay = \"0\"+endDay;\r\n    }\r\n\r\n    let endMonth = end.getMonth() + 1;\r\n    if (endMonth < 10) {\r\n        endMonth = \"0\"+endMonth;\r\n    }\r\n\r\n    startD.value = start.getFullYear() + \"-\" + startMonth + \"-\" + startDay;\r\n    console.log(startD.value);\r\n    this.props.rentDetail.setState({startDate:startD.value});\r\n\r\n    let endD = document.getElementById(\"endDateField\");\r\n    endD.value = end.getFullYear() + \"-\" + endMonth + \"-\" + endDay;\r\n    console.log(endD.value);\r\n    this.props.rentDetail.setState({endDate:endD.value});\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Calendar\r\n          views = {['month']}\r\n          selectable\r\n          localizer={localizer}\r\n          events={this.itemEvents}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          style={{height: 500}}\r\n          onSelectSlot = {this.handleSelect}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport class ItemDescription extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modelOpen: false, messageOpen:false, itemCalendarShown:false };\r\n        this.ownsItem = this.props.application.state.user === this.props.item.userID;\r\n    }\r\n\r\n    deleteItem(itemID) {\r\n        fetch('https://borrow-java.herokuapp.com/items/'+itemID+'/',{method:'DELETE'});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n            <Image  src={`data:image/jpeg;base64,${this.props.item.img}`} wrapped ui={false}/>\r\n            <Card.Content>\r\n                <Card.Header> {this.props.item.name}</Card.Header>\r\n                <Card.Description><strong>Description: </strong>{this.props.item.description} </Card.Description>\r\n                <Card.Description><strong>Daily Rate: </strong>${this.props.item.dailyRate}</Card.Description>\r\n                <Card.Description><strong>Replace Fee: </strong>${this.props.item.replaceFee}</Card.Description>\r\n                <Card.Description><strong>Tags: </strong>{this.props.item.tags}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <div className='ui two buttons'>\r\n                  <Modal\r\n                      open={this.state.itemCalendarShown}\r\n                      trigger={\r\n                          <Button style={{'display':this.ownsItem ? 'inline':'none'}} basic color = 'blue' onClick={()=> {this.setState({itemCalendarShown:true});}}>Calendar</Button>\r\n                      }\r\n                  >\r\n                      <Container>\r\n                          <Schedule closeModal={() => {this.setState({itemCalendarShown: false});}} application={this.props.application}\r\n                                item={this.props.item} user1={this.props.application.state.user}/>\r\n                      </Container>\r\n                  </Modal>\r\n                  <Modal\r\n                      open={this.state.modalOpen}\r\n                      trigger={\r\n                          <Button style={{'display':this.ownsItem ? 'none': 'inline'}} basic color = 'green' onClick={()=> {this.setState({modalOpen:true});}}>Rent</Button>\r\n                      }\r\n                  >\r\n                      <Container>\r\n                          <Rent closeModal={() => {this.setState({modalOpen: false});}} application={this.props.application}\r\n                                user2={this.props.item.userID} user1={this.props.application.state.user}\r\n                                  item={this.props.item} dailyRate={this.props.item.dailyRate}/>\r\n                      </Container>\r\n                  </Modal>\r\n                  <Button style={{'display':this.ownsItem ? 'inline': 'none'}} basic color = 'red' onClick={()=>{this.deleteItem(this.props.item.itemID);}}>Delete</Button>\r\n                  <Modal\r\n                      open={this.state.messageOpen}\r\n                      trigger={\r\n                          <Button style={{'display':this.ownsItem ? 'none': 'inline'}} basic color ='red' onClick={()=> {this.setState({messageOpen:true});}}>Send Message</Button>\r\n                      }\r\n                  >\r\n                      <Container>\r\n                          <Chat closeModal={() => {this.setState({messageOpen: false});}} application={this.props.application}\r\n                              user2={this.props.item.userID} user1={this.props.application.state.user} item={this.props.item}/>\r\n                      </Container>\r\n                  </Modal>\r\n\r\n              </div>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <a onClick= {()=>{this.props.application.setState({account: true, accountid: this.props.item.userID})}}>\r\n                <Icon name='user' />\r\n{this.props.item.userID}\r\n              </a>\r\n            </Card.Content>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nclass Schedule extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messgaes:\"\", chatID:0, userRentee:\"\", startDate:\"\", endDate:\"\"};\r\n    }\r\n\r\n    async getChat() {\r\n            try {\r\n                await fetch(`https://borrow-java.herokuapp.com/chat/user/`+this.props.user1 +'/'+this.state.userRentee+'/', )\r\n                    .then((response)=>{return response.json().then((res)=>{this.setState({messages:res[\"messages\"], chatID:res[\"chatID\"]})})});\r\n            } catch (e) {\r\n                console.log(e);\r\n                let formData = new FormData;\r\n                formData.append(\"user1ID\", this.props.user1);\r\n                formData.append(\"user2ID\", this.state.userRentee);\r\n                fetch(`https://borrow-java.herokuapp.com/chat/`, {method:'POST', body:formData});\r\n                window.setTimeout(function () {\r\n                    //wait for data to be sent to server\r\n                },2000);\r\n            } finally {\r\n                window.setTimeout(() => { this.getChat(); }, 200);\r\n            }\r\n    }\r\n\r\n    addBooking() {\r\n        let formData = new FormData;\r\n        formData.append(\"booking\", \"||\"+this.state.userRentee +\r\n            \":(\" + this.state.startDate + \",\" + this.state.endDate + \")\");\r\n        fetch('https://borrow-java.herokuapp.com/items/'+this.props.item.itemID +'/',{method:'PUT', body: formData});\r\n    }\r\n\r\n    sendMessage() {\r\n        if (this.state.chatID !== 0) {\r\n            let formData = new FormData;\r\n            formData.append(\"message\", \"||\"+ this.props.user1+\": \"+ \"I have confirmed your schedule to rent \"+ this.props.item.name + \" from \" +\r\n                this.state.startDate + \" to \" + this.state.endDate + \" if this is a mistake please message me ASAP\");\r\n            formData.append(\"senderID\", this.props.user1);\r\n            fetch('https://borrow-java.herokuapp.com/chat/'+this.state.chatID+'/',{method:'PUT', body: formData});\r\n            this.props.closeModal();\r\n        }\r\n    }\r\n\r\n    handleRequest() {\r\n        if (!(this.state.startDate===\"\" || this.state.endDate===\"\")) {\r\n            this.getChat().then(()=> {\r\n                this.addBooking();\r\n                this.sendMessage();\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container style={{marginTop: '5%', marginBottom: '5%'}} text>\r\n                    <Header as='h2'>Item Schedule</Header>\r\n                    <RentersCalendar rentDetail={this} item={this.props.item}/>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Start Date</label>\r\n                            <input\r\n                                readOnly={true}\r\n                                required={true}\r\n                                type='date'\r\n                                name='startDate'\r\n                                id='startDateField'\r\n                                onChange={()=>{this.setState({startDate:document.getElementById(\"startDateField\").value})}}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>End Date</label>\r\n                            <input\r\n                                readOnly={true}\r\n                                required={true}\r\n                                type='date'\r\n                                name='endDate'\r\n                                id='endDateField'\r\n                                onChange={()=>{this.setState({endDate: document.getElementById(\"endDateField\").value})}}\r\n                            />\r\n                            <label>Requesting User</label>\r\n                            <input\r\n                                type='text'\r\n                                name='user'\r\n                                id='nameField'\r\n                                onChange={()=>{this.setState({userRentee: document.getElementById(\"nameField\").value})}}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                        <Button onClick={this.props.closeModal}>Cancel</Button>\r\n                        <Button onClick={()=>{this.handleRequest();}}>Add Reservation</Button>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Rent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages:\"\", chatID:0, validDates: null, startDate:\"\", endDate:\"\"};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getChat();\r\n    }\r\n\r\n    async getChat() {\r\n        try {\r\n            await fetch(`https://borrow-java.herokuapp.com/chat/user/`+this.props.user1 +'/'+this.props.user2+'/', )\r\n                .then((response)=>{return response.json().then((res)=>{this.setState({messages:res[\"messages\"], chatID:res[\"chatID\"]})})});\r\n        } catch (e) {\r\n            console.log(e);\r\n            let formData = new FormData;\r\n            formData.append(\"user1ID\", this.props.user1);\r\n            formData.append(\"user2ID\", this.props.user2);\r\n            fetch(`https://borrow-java.herokuapp.com/chat/`, {method:'POST', body:formData});\r\n            window.setTimeout(function () {\r\n                //wait for data to be sent to server\r\n            },2000);\r\n        } finally {\r\n            window.setTimeout(() => { this.getChat(); }, 200);\r\n        }\r\n    };\r\n\r\n    sendMessage() {\r\n        let formData = new FormData;\r\n        formData.append(\"message\", \"||\"+ this.props.user1+\": \"+ \"I would like to rent \"+ this.props.item.name+ \" from \" +\r\n                                this.state.startDate + \" to \" + this.state.endDate +\r\n            \" for $\" + this.props.dailyRate * this.getDaysBetween(this.state.startDate, this.state.endDate) + \" ID=\"+this.props.item.itemID);\r\n        formData.append(\"senderID\", this.props.user1);\r\n        fetch('https://borrow-java.herokuapp.com/chat/'+this.state.chatID+'/',{method:'PUT', body: formData});\r\n        this.props.closeModal();\r\n    }\r\n\r\n    handleRequest() {\r\n        if (this.state.startDate===\"\" || this.state.endDate===\"\") {\r\n            this.setState({validDates: false});\r\n        } else {\r\n            this.setState({validDates: true});\r\n            this.sendMessage();\r\n        }\r\n    }\r\n\r\n\r\n    getDaysBetween(start, end) {\r\n        if (this.state.startDate===\"\" || this.state.endDate===\"\") {\r\n            return 0;\r\n        }\r\n\r\n        console.log(start);\r\n        let startArr = start.split('-');\r\n        let endArr = end.split('-');\r\n        console.log(\"START\");\r\n        console.log(startArr);\r\n        console.log(\"END\");\r\n        console.log(endArr);\r\n\r\n        let total = 0;\r\n        total+= (endArr[0]-startArr[0])*365;\r\n        total+= (endArr[1]-startArr[1])*31;\r\n        total+=(endArr[2]-startArr[2]);\r\n        if (total < 0) {\r\n            return 0;\r\n        }\r\n        let months = [];\r\n        for (let i = startArr[1]; i < endArr[1]; i++) {\r\n            months.push(i);\r\n        }\r\n\r\n        if (months.includes(2)) {\r\n            total-=3;\r\n        }\r\n        if (months.includes(4)) {\r\n            total-=1;\r\n        }\r\n        if (months.includes(6)) {\r\n            total-=1;\r\n        }\r\n        if (months.includes(9)) {\r\n            total-=1;\r\n        }\r\n        if (months.includes(11)) {\r\n            total-=1;\r\n        }\r\n\r\n        return total;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container style={{marginTop: '5%', marginBottom: '5%'}} text>\r\n                    <Header as='h2'>Request to Rent</Header>\r\n                    <RentersCalendar rentDetail={this} item={this.props.item}/>\r\n                    <p>Total Cost: ${this.props.dailyRate * this.getDaysBetween(this.state.startDate, this.state.endDate)}</p>\r\n                        <Form success={this.state.validDates!=null ? this.state.validDates : false} error={this.state.validDates!=null ? !this.state.validDates : false}>\r\n                            <Form.Field>\r\n                                <label>Start Date</label>\r\n                                <input\r\n                                    readOnly={true}\r\n                                    required={true}\r\n                                    type='date'\r\n                                    name='startDate'\r\n                                    id='startDateField'\r\n                                    onChange={()=>{this.setState({startDate:document.getElementById(\"startDateField\").value})}}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>End Date</label>\r\n                                <input\r\n                                    readOnly={true}\r\n                                    required={true}\r\n                                    type='date'\r\n                                    name='endDate'\r\n                                    id='endDateField'\r\n                                    onChange={()=>{this.setState({endDate: document.getElementById(\"endDateField\").value})}}\r\n                                />\r\n                            </Form.Field>\r\n                            <hr/>\r\n                            <Message\r\n                                success\r\n                                header='Rental message sent.'\r\n                                content=\"A message has been sent to the renter\"\r\n                            />\r\n                            <Message\r\n                                error\r\n                                header='Rental message failed.'\r\n                                content=\"Please select valid start and end dates.\"\r\n                            />\r\n                            <p>Total Cost: ${this.props.dailyRate * this.getDaysBetween(this.state.startDate, this.state.endDate)}</p>\r\n                            <Button onClick={()=>{this.handleRequest();}}>Request to Rent</Button>\r\n                            <Button onClick={this.props.closeModal}>Cancel</Button>\r\n                        </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { messages:\"\", chatID:0};\r\n        this.userMessage = \"\";\r\n        this.win = null;\r\n    }\r\n\r\n    updateRead() {\r\n        let formData = new FormData;\r\n        formData.append(\"userID\", this.props.user1);\r\n        fetch(\"https://borrow-java.herokuapp.com/chat/\"+this.state.chatID+'/user/', { method: \"PUT\", body: formData});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getChat();\r\n    }\r\n\r\n    async getChat() {\r\n        try {\r\n            await fetch(`https://borrow-java.herokuapp.com/chat/user/`+this.props.user1 +'/'+this.props.user2+'/', )\r\n                .then((response)=>{return response.json()\r\n                    .then((res)=>{\r\n                        this.setState({messages:res[\"messages\"], chatID:res[\"chatID\"]});\r\n                        this.updateRead();\r\n                    })});\r\n        } catch (e) {\r\n            console.log(e);\r\n            let formData = new FormData;\r\n            formData.append(\"user1ID\", this.props.user1);\r\n            formData.append(\"user2ID\", this.props.user2);\r\n            fetch(`https://borrow-java.herokuapp.com/chat/`, {method:'POST', body:formData});\r\n            window.setTimeout(function () {\r\n                //wait for data to be sent to server\r\n            },2000);\r\n        } finally {\r\n            this.win = window.setTimeout(() => { this.getChat(); }, 200);\r\n        }\r\n    };\r\n\r\n    sendMessage(event) {\r\n        if (this.userMessage !== \"\" && event.key === 'Enter') {\r\n            let formData = new FormData;\r\n            formData.append(\"message\", \"||\"+ this.props.user1 + \":\" + this.userMessage);\r\n            formData.append(\"senderID\",this.props.user1);\r\n            fetch('https://borrow-java.herokuapp.com/chat/'+this.state.chatID+'/',{method:'PUT', body: formData});\r\n            document.getElementById(\"messageField\").value = \"\";\r\n            let msgDiv = document.getElementById(\"msgDiv\");\r\n            if (msgDiv != null) {\r\n                msgDiv.scrollTop = msgDiv.scrollHeight;\r\n            }\r\n            this.userMessage=\"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Container style={{marginTop: '2%', marginBottom: '2%'}} text>\r\n                <Grid>\r\n                  <Grid.Column floated='left' width={5}>\r\n                    <Header as='h2'>Messaging: {this.props.user2}</Header>\r\n                  </Grid.Column>\r\n                  <Grid.Column floated='right' width={1}>\r\n                  <Button circular className = \"left floated\" onClick={()=>{window.clearTimeout(this.win); this.props.closeModal()}}><Icon name = 'close'/></Button>\r\n\r\n                  </Grid.Column>\r\n                </Grid>\r\n                    <Segment>\r\n                    <Messages user = {this.props.user1} messages={this.state.messages} item={this.props.item} chat={this}/>\r\n                    </Segment>\r\n\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <input\r\n                                type='text'\r\n                                name='message'\r\n                                id='messageField'\r\n                                onKeyPress={(event)=>{this.sendMessage(event)}}\r\n                                onChange={()=>{this.userMessage = document.getElementById(\"messageField\").value}}\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    getMessages() {\r\n        let messageArray = this.props.messages.split(\"||\");\r\n        let messages = [];\r\n        for (let i = 0; i < messageArray.length; i++){\r\n            let message = messageArray[i];\r\n            if (message === \"\") {\r\n                continue;\r\n            }\r\n            let sep = message.indexOf(\":\");\r\n            let user = message.substr(0,sep);\r\n            message = message.substr(sep+1);\r\n            if (i === messageArray.length - 1) {\r\n                messages.push(<ChatMessage user = {user} message = {message} chat={this.props.chat}\r\n                                           currentUser = {this.props.user} last={true} item={this.props.item}/>)\r\n            } else {\r\n                messages.push(<ChatMessage user = {user} message = {message} chat={this.props.chat}\r\n                                           currentUser = {this.props.user} last={false} item={this.props.item}/>)\r\n            }\r\n\r\n        }\r\n        return messages;\r\n    }\r\n\r\n    render(){\r\n        return (\r\n\r\n            <div id=\"msgDiv\" style={{'overflowY':'scroll', height:'50vh'}} >\r\n                {this.getMessages()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass ChatMessage extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.rentable = false;\r\n      this.textAlign = \"right\";\r\n      if (this.props.currentUser === this.props.user) {\r\n          this.textAlign = \"left\"\r\n      }\r\n      let re = new RegExp(\"I would like to rent .* from .* to .* for .* ID=.*\");\r\n      if (this.props.last && re.test(this.props.message) && this.props.currentUser!==this.props.user) {\r\n          this.rentable = true;\r\n\r\n          let msg = this.props.message;\r\n          let itemNameStart = msg.indexOf(\"rent\") + 5;\r\n\r\n          msg = msg.substring(itemNameStart);\r\n          let itemNameEnd = msg.indexOf(\"from\");\r\n          this.itemName = msg.substring(0,itemNameEnd);\r\n\r\n          msg = msg.substring(itemNameEnd + 4);\r\n          let toIndex = msg.indexOf(\"to\");\r\n          this.startDate = msg.substring(0,toIndex);\r\n\r\n          msg = msg.substring(toIndex+2);\r\n          let forIndex = msg.indexOf(\"for\");\r\n          this.endDate = msg.substring(0,forIndex);\r\n\r\n          msg = msg.substring(forIndex+5);\r\n          let IDindex = msg.indexOf(\"ID=\");\r\n          this.amount = msg.substring(0,IDindex);\r\n\r\n          this.itemID = msg.substring(IDindex+3);\r\n\r\n\r\n      }\r\n  }\r\n\r\n  handleResponse(allow) {\r\n      if(allow) {\r\n          console.log(\"hi\");\r\n          this.addBooking().then(()=>{this.sendMessage(allow);});\r\n      } else {\r\n          this.sendMessage(allow);\r\n      }\r\n\r\n  }\r\n\r\n\r\n  async addBooking() {\r\n      let formData = new FormData;\r\n      formData.append(\"booking\", \"||\"+this.props.user +\r\n          \":(\" + this.startDate + \",\" + this.endDate + \")\");\r\n      await fetch('https://borrow-java.herokuapp.com/items/'+this.itemID +'/',{method:'PUT', body: formData});\r\n  }\r\n\r\n  sendMessage(allow) {\r\n        if (this.props.chat.state.chatID !== 0) {\r\n            let formData = new FormData;\r\n            if (allow) {\r\n                formData.append(\"message\", \"||\"+ this.props.currentUser+\": \"+ \"I have confirmed your request to rent \"+ this.itemName + \" from \" +\r\n                    this.startDate + \" to \" + this.endDate + \" please make the appropriate payment to my account within the next 24 hours.\");\r\n            } else {\r\n                formData.append(\"message\", \"||\"+ this.props.currentUser+\": \"+ \"I have denied your request to rent \"+ this.itemName + \" from \" +\r\n                    this.startDate + \" to \" + this.endDate );\r\n            }\r\n\r\n            formData.append(\"senderID\", this.props.currentUser);\r\n            fetch('https://borrow-java.herokuapp.com/chat/'+this.props.chat.state.chatID+'/',{method:'PUT', body: formData});\r\n        }\r\n  }\r\n\r\n  cleanMessage(msg) {\r\n      let i = msg.indexOf(\"ID=\");\r\n      if (i !== -1) {\r\n          return msg.substr(0, i);\r\n      }\r\n      return msg;\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Comment style={{\"textAlign\":this.textAlign, \"padding\":\"2vh\"}}>\r\n  <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\r\n  <Comment.Content>\r\n        <Comment.Author as='a'>{this.props.user}</Comment.Author>\r\n        <Comment.Text>{this.cleanMessage(this.props.message)}</Comment.Text>\r\n        <button style={{'display':this.rentable ? 'inline':'none', 'backgroundColor':'green'}}\r\n        onClick={()=>{this.handleResponse(true)}}>Ok</button>\r\n        <button style={{'display':this.rentable ? 'inline':'none', 'backgroundColor':'red'}}\r\n        onClick={()=>{this.handleResponse(false)}}>No</button>\r\n  </Comment.Content>\r\n</Comment>\r\n\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Card, Image, Input, Form, Button, Segment, Container, Header, Grid, Menu, Modal, Message } from 'semantic-ui-react';\r\nimport ImagesUploader from 'react-images-uploader';\r\nimport {ItemDescription} from './ItemList.js'\r\n// Model\r\nclass ItemModel {\r\n    constructor(itemID, description, name, userID, replaceFee, dailyRate, tags, img, booking) {\r\n        this.itemID = itemID;\r\n        this.description = description;\r\n        this.name = name;\r\n        this.userID = userID;\r\n        this.replaceFee = replaceFee;\r\n        this.dailyRate = dailyRate;\r\n        this.tags = tags[0].split(', ');\r\n        this.img = img;\r\n        this.booking = booking;\r\n    }\r\n}\r\n\r\nexport class Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { modalOpen: false, messages: 0, imgPath:\"message.png\"};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMessagesFromServer();\r\n    }\r\n\r\n    async getMessagesFromServer() {\r\n        let unread = 0;\r\n        const response = await (await fetch(\"https://borrow-java.herokuapp.com/chat/user/\" + this.props.user)).json();\r\n        response.forEach((chat) => {\r\n            if ((this.props.user === chat.user1 && chat.lastU1seen < chat.lastMessageTime)\r\n                || (this.props.user === chat.user2 && chat.lastU2seen < chat.lastMessageTime)) {\r\n                    unread+=1;\r\n            }\r\n        });\r\n        if (unread > 0) {\r\n            this.setState({messages:unread, imgPath:\"messageAlert.png\"})\r\n        } else {\r\n            this.setState({messages:unread, imgPath:\"message.png\"})\r\n        }\r\n        window.setTimeout(() => { this.getMessagesFromServer(); }, 200);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Menu widths={6} attached='top'>\r\n                <Menu.Item onClick={()=> {this.props.application.setState({account:false, onMessagePage:false})}}>\r\n                    <Container style={{padding: '1.5% 7.5% 1.5% 7.5%'}}>\r\n                        <Image src=\"brw.png\" rounded />\r\n                    </Container>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item style={{paddingRight: '15px'}}>\r\n                    <Modal\r\n                        open={this.state.modalOpen}\r\n                        trigger={\r\n\r\n                            <Button style={{margin: '2% 10% 2% 10%'}} onClick={() => {this.setState({modalOpen: true});}}>\r\n                                 <Button.Content>Add Item</Button.Content>\r\n                            </Button>\r\n                        }\r\n                    >\r\n                        <Container>\r\n                            <ContentComponent closeModal={() => {this.setState({modalOpen: false});}} application={this.props.application} navbar={this} />\r\n                        </Container>\r\n                    </Modal>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item>\r\n                    <Container>\r\n                        <Input\r\n                            size='mini'\r\n                            id='searchQuery'\r\n                            onChange={()=>{this.props.application.setState({searchQuery: document.getElementById(\"searchQuery\").value})}}\r\n                            icon={{ name: 'search', circular: true }}\r\n                            placeholder='Search...'\r\n                        />\r\n                        <Input\r\n                            style={{margin: '10px 10px 0px 10px'}}\r\n                            type='number'\r\n                            onChange={()=>{this.props.application.setState({maxPrice: document.getElementById(\"maxPrice\").value})}}\r\n                            size='mini'\r\n                            id='maxPrice'\r\n                            icon={{name: 'dollar sign'}}\r\n                            placeholder='Max Price'\r\n                        />\r\n                    </Container>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item style={{paddingLeft: '15px'}} onClick={()=> {this.props.application.setState({account:true, accountid : this.props.application.state.user, onMessagePage:false})}}>\r\n                    <Container>\r\n                        <span>User: {this.props.application.state.user}</span>\r\n                    </Container>\r\n                </Menu.Item>\r\n                <Menu.Item onClick={()=>{this.props.application.setState({onMessagePage:true, account:false, accountid:null});}}>\r\n                    <figure>\r\n                        <Image src={this.state.imgPath}/>\r\n                        <figcaption>{this.state.messages} unread messages</figcaption>\r\n                    </figure>\r\n                </Menu.Item>\r\n                <Menu.Item onClick={() => {this.props.application.setState({signedIn: false, user: null, accountid: null, account: false, onMessagePage: false});}}>Sign Out</Menu.Item>\r\n            </Menu>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n// Model\r\nclass UserModel {\r\n    constructor(userID, name, sellerRating, buyerRating, img) {\r\n        this.userID = userID;\r\n        this.name = name;\r\n        this.sellerRating = sellerRating;\r\n        this.buyerRating = buyerRating;\r\n        this.img = img;\r\n    }\r\n}\r\n\r\n// Controller\r\nclass ItemsController {\r\n    static async getDataFromServer(path) {\r\n        let items = new Array();\r\n        const response = await (await fetch(path)).json();\r\n        response.forEach((item) => {\r\n            items.push(new ItemModel(item.itemID, item.description, item.name, item.userID, item.replaceFee, item.dailyRate, item.tags, item.img, item.bookedDates));\r\n        });\r\n        return items;\r\n    }\r\n\r\n    static postDataToServer = (formData) => {\r\n        return fetch(\"https://borrow-java.herokuapp.com/items\", { method: \"POST\", body: formData});\r\n    }\r\n\r\n    static deleteDataFromServer = (itemID) => {\r\n        return fetch(`https://borrow-java.herokuapp.com/items/${itemID}`, { method: \"DELETE\" });\r\n    }\r\n\r\n\r\n    static updateDataOnServer = (itemID, formData) => {\r\n        return fetch(`https://borrow-java.herokuapp.com/items/${itemID}`, { method: \"PUT\", body: formData });\r\n    }\r\n}\r\n\r\n// Controller\r\nclass UsersController {\r\n    static async getDataFromServer(id) {\r\n        let users = new Array();\r\n        const response = await (await fetch(`https://borrow-java.herokuapp.com/users/`)).json();\r\n        response.forEach((user) => {\r\n            users.push(user.userID);\r\n        });\r\n        return users;\r\n    }\r\n\r\n    static async getUser(userID) {\r\n       const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n       const json = await response.json();\r\n       return json['password'];\r\n    };\r\n\r\n    static async login(userID, password) {\r\n        let formData = new FormData();\r\n        formData.append(\"login\",userID);\r\n        formData.append(\"password\",password);\r\n        const response = await fetch(\"https://borrow-java.herokuapp.com/users/login\", {method:\"POST\", body:formData})\r\n        return response;\r\n    }\r\n\r\n    static postDataToServer = (formData) => {\r\n        return fetch(\"https://borrow-java.herokuapp.com/users\", { method: \"POST\", body: formData});\r\n    };\r\n\r\n    static deleteDataFromServer = (userID) => {\r\n        return fetch(`https://borrow-java.herokuapp.com/users/${userID}`, { method: \"DELETE\" });\r\n    };\r\n\r\n    static updateDataOnServer = (userID, formData) => {\r\n        return fetch(`https://borrow-java.herokuapp.com/users/${userID}`, { method: \"PUT\", body: formData });\r\n    }\r\n}\r\n\r\n// Views\r\n\r\nexport class SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.userName = \"\";\r\n        this.password = \"\";\r\n        this.state = { users: [], signedUp: null, loginFailed: null };\r\n        this.res = null;\r\n        this.userPassword = \"\";\r\n    }\r\n\r\n    async getDataFromServer() {\r\n        this.setState({ users: await UsersController.getDataFromServer() });\r\n        // this.setState({ items: await (await fetch(\"/items\")).json() });\r\n        window.setTimeout(() => { this.getDataFromServer(); }, 200);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromServer();\r\n    }\r\n\r\n    async getUser(userID) {\r\n        this.userPassword = await  UsersController.getUser(userID);\r\n    }\r\n\r\n    async loginUser(userID, password) {\r\n        this.res = await UsersController.login(userID, password);\r\n    }\r\n\r\n    handleLogin() {\r\n        if (this.password ===\"\" || this.userName === \"\") {\r\n            // empty fields\r\n        } else {\r\n            this.loginUser(this.userName, this.password).then(()=>{\r\n                if (this.res.status == 200) {\r\n                    // valid user/pass\r\n                    this.props.application.setState({signedIn:true, user:this.userName});\r\n                    this.setState({ signedUp: null });\r\n                    this.setState({ loginFailed: null });\r\n                } else {\r\n                    // invalid user/pass\r\n                    this.setState({ loginFailed: true });\r\n                    this.setState({ signedUp: null });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSignUp() {\r\n        if (this.password === \"\" || this.userName === \"\") {\r\n            // empty fields\r\n        } else {\r\n            if (this.userName.endsWith('@jhu.edu') || this.userName.endsWith('@jh.edu')) {\r\n                this.getUser(this.userName).then(() => {\r\n                    if (this.userPassword === \"\") {\r\n                        // Username available\r\n                        const formData = new FormData();\r\n                        formData.append(\"userID\", this.userName);\r\n                        formData.append(\"password\", this.password);\r\n                        UsersController.postDataToServer(formData);\r\n                        this.setState({ signedUp: true, loginFailed: null });\r\n                    } else {\r\n                        // Username taken\r\n                        this.setState({ signedUp: false, loginFailed: null });\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({ signedUp: false, loginFailed: null});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid centered colums = {5}>\r\n                <Grid.Row centered columns = {2}>\r\n                    <Grid.Column>\r\n                        <Container textAlign = 'left'>\r\n                            <Form success={this.state.signedUp!=null ? this.state.signedUp : false} warning={this.state.signedUp!=null ? !this.state.signedUp : false} error={this.state.loginFailed!=null ? this.state.loginFailed : false}>\r\n                                <Header>Email:</Header>\r\n                                <Form.Input\r\n                                    required={true}\r\n                                    type='text'\r\n                                    name='username'\r\n                                    id=\"username\"\r\n                                    onChange={()=>{this.userName = document.getElementById(\"username\").value}}\r\n                                />\r\n                                <Header>Password:</Header>\r\n                                <Form.Input\r\n                                    required={true}\r\n                                    type='password'\r\n                                    name='password'\r\n                                    id=\"password\"\r\n                                    onChange={()=>{this.password = document.getElementById(\"password\").value}}\r\n                                />\r\n\r\n                                <hr/>\r\n                                <Message\r\n                                    success\r\n                                    header='Sign Up Complete.'\r\n                                    content=\"You're all signed up.\"\r\n                                />\r\n                                <Message\r\n                                    warning\r\n                                    header='Sign Up Failed.'\r\n                                    content=\"You entered a non-jhu email, or an email already in use.\"\r\n                                />\r\n                                <Message\r\n                                    error\r\n                                    header='Sign In Failed.'\r\n                                    content=\"Invalid email or password.\"\r\n                                />\r\n\r\n                                <Button onClick={()=>{this.handleLogin();}}>Login</Button>\r\n                                <Button onClick={()=>{this.handleSignUp();}}>Sign up</Button>\r\n                            </Form>\r\n                        </Container>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nexport class ContentComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { plusShown:true, pictures: []};\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.username = this.props.application.state.user;\r\n        this.description = \"\";\r\n        this.itemName = \"\";\r\n        this.replaceFee = -1;\r\n        this.dailyRate = -1;\r\n        this.tag = \"\";\r\n        this.tags = [];\r\n        this.formData = new FormData();\r\n    }\r\n\r\n\r\n    handleSubmit() {\r\n      if(this.description == \"\" && this.itemName == \"\" && this.tag == \"\" && this.replaceFee == -1 && this.dailyRate == -1) {\r\n\r\n        }  else {\r\n          this.setState({plusShown: true});\r\n          this.props.application.setState({signedIn:true, user:this.username});\r\n          this.tags.push(this.tag);\r\n          this.formData.append(\"identifier\",-1);\r\n          this.formData.append(\"description\", this.description);\r\n          this.formData.append(\"name\",this.itemName);\r\n          this.formData.append(\"username\",this.username);\r\n          this.formData.append(\"replaceFee\",this.replaceFee);\r\n          this.formData.append(\"dailyRate\",this.dailyRate);\r\n          this.formData.append(\"tags\", this.tags);\r\n          ItemsController.postDataToServer(this.formData);\r\n\r\n          this.props.closeModal();\r\n        }\r\n\r\n    }\r\n\r\n    handleFormChange() {\r\n        this.setState({plusShown:false});\r\n        this.props.application.setState({signedIn:true, user:this.username});\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({plusShown: true});\r\n        this.props.application.setState({signedIn:true, user:this.username});\r\n    }\r\n\r\n    uploadFile(event) {\r\n        let file = event.target.files[0];\r\n\r\n        if (file) {\r\n            this.formData.append('image', file);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container style={{marginTop: '2%', marginBottom: '2%'}} text>\r\n                    <Header as='h2'>Adding an Item</Header>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Title</label>\r\n                            <input\r\n                                type='text'\r\n                                name='name'\r\n                                id=\"itemNameField\"\r\n                                onChange={()=>{this.itemName = document.getElementById(\"itemNameField\").value}}\r\n                                required\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Description</label>\r\n                            <input\r\n                                type='text'\r\n                                name='description'\r\n                                id=\"descField\"\r\n                                onChange={()=>{this.description = document.getElementById(\"descField\").value}}\r\n                                required\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Daily Rate</label>\r\n                            <input\r\n                                type='number'\r\n                                step=\"0.01\"\r\n                                name='dailyRate'\r\n                                id=\"dailyRateField\"\r\n                                onChange={()=>{this.dailyRate = document.getElementById(\"dailyRateField\").value}}\r\n                                required\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Replacement Fee</label>\r\n                            <input\r\n                                type='number'\r\n                                step=\"0.01\"\r\n                                name='replaceFee'\r\n                                id=\"replacementField\"\r\n                                onChange={()=>{this.replaceFee = document.getElementById(\"replacementField\").value}}\r\n                                required\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Tags</label>\r\n                            <input\r\n                                type='text'\r\n                                name='tag'\r\n                                id=\"tagField\"\r\n                                onChange={()=>{this.tag = document.getElementById(\"tagField\").value}}\r\n                                required\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Form.Field>\r\n                            <label>Images</label>\r\n                            <input\r\n                                type='file'\r\n                                accept='image/jpeg, image/png'\r\n                                name='image'\r\n                                id='imageField'\r\n                                onChange={this.uploadFile}\r\n                                required\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        <Button onClick={()=>{this.handleSubmit();}}>Submit</Button>\r\n                        <Button onClick={()=>{this.props.navbar.setState({modalOpen: false});}}>Cancel</Button>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport class ItemList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { items: [] };\r\n    }\r\n\r\n    filterBySearchQuery(gotItems, query, maxPrice) {\r\n        let newItems = [];\r\n\r\n        let maxDailyRate = Number.MAX_VALUE;\r\n        if (maxPrice != '' && isNaN(parseFloat(maxPrice)) != true) {\r\n            maxDailyRate = parseFloat(maxPrice);\r\n        }\r\n\r\n        gotItems.forEach((item) => {\r\n            if (item.dailyRate <= maxDailyRate) {\r\n                if (item.name.toLowerCase().includes(query.toLowerCase()) || query.toLowerCase().includes(item.name.toLowerCase())) {\r\n                    newItems.push(item);\r\n                } else if (item.description.toLowerCase().includes(query.toLowerCase()) || query.toLowerCase().includes(item.description.toLowerCase())) {\r\n                    newItems.push(item);\r\n                } else if (item.userID.toLowerCase().includes(query.toLowerCase()) || query.toLowerCase().includes(item.userID.toLowerCase())){\r\n                    newItems.push(item);\r\n                } else {\r\n                    let tagFound = false;\r\n                    item.tags.forEach((tag) => {\r\n                        if (tag.toLowerCase().includes(query.toLowerCase()) || query.toLowerCase().includes(tag.toLowerCase())) {\r\n                            tagFound = true;\r\n                        }\r\n                    });\r\n                    if (tagFound) {\r\n                        newItems.push(item);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return newItems;\r\n    }\r\n\r\n    async getDataFromServer() {\r\n        let path;\r\n        if (this.props.user == null) {\r\n            path = \"https://borrow-java.herokuapp.com/items\";\r\n        } else {\r\n            path = \"https://borrow-java.herokuapp.com/items/user/\"+ this.props.user;\r\n        }\r\n\r\n        let gotItems = await ItemsController.getDataFromServer(path);\r\n\r\n        gotItems = this.filterBySearchQuery(gotItems, this.props.searchQuery, this.props.maxPrice);\r\n\r\n        this.setState({ items: gotItems });\r\n        // this.setState({ items: await (await fetch(\"/items\")).json() });\r\n\r\n        // onsole.log(this.state.items);\r\n        window.setTimeout(() => { this.getDataFromServer(path); }, 200);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromServer();\r\n    }\r\n\r\n    render() {\r\n        return <Container style={{marginTop: '10px'}}><Grid columns = {4}>{this.state.items.map(item => <Item key={item.itemID} item={item} application={this.props.application}/>)}</Grid> </Container>;\r\n    }\r\n}\r\n\r\nclass Item extends React.Component {\r\n    render() {\r\n        return (\r\n            <Grid.Column stretched>\r\n                <ItemDescription item={this.props.item} application={this.props.application}/>\r\n            </Grid.Column>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Image, Icon, Input, Form, Button, Segment, Container, Header, Grid, Menu, Modal, Message, List, Card , Rating, Divider} from 'semantic-ui-react';\r\nimport { SignIn, ItemList, ContentComponent, Navbar } from './ItemsComponents';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MyCalendar = props => (\r\n  <div>\r\n    <Calendar\r\n      views = {['month']}\r\n      selectable\r\n      localizer={localizer}\r\n      events={[]}\r\n      startAccessor=\"start\"\r\n      endAccessor=\"end\"\r\n      style={{height: 500}}\r\n    />\r\n  </div>\r\n);\r\n\r\nclass RatingRun extends React.Component {\r\n  state = {}\r\n\r\n  handleRate = (e, { rating, maxRating }) =>\r\n    this.setState({ rating, maxRating })\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Modal trigger={<Rating icon='star' onRate={this.handleRate} defaultRating={0} maxRating={5} size = 'massive'/>}>\r\n      <Modal.Content>\r\n      <AddFeedback rating = {this.state.rating} userID={this.props.userID} seller = {this.props.seller}></AddFeedback>\r\n      </Modal.Content>\r\n      </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport class MyAccount extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.formData = new FormData;\r\n        this.state = {profile:'', payPal: false, balance:0};\r\n        this.amt = 0;\r\n        this.email = \"\";\r\n    }\r\n\r\n    handlePayment(data, details) {\r\n        fetch(\"/paypal-transaction-complete\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                orderID: data.orderID,\r\n                details: details\r\n            })\r\n        }).then(()=>{this.addFunds(); this.setState({payPal:false})});\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.updateDataOnServer(this.props.user ,this.formData);\r\n    }\r\n\r\n    updateDataOnServer(userID, formData) {\r\n        return fetch(`https://borrow-java.herokuapp.com/users/${userID}`, { method: \"PUT\", body: formData });\r\n    }\r\n\r\n    uploadFile(event) {\r\n        let file = event.target.files[0];\r\n\r\n        if (file) {\r\n            this.formData.append('image', file);\r\n        }\r\n    }\r\n\r\n    async withdrawFunds(email) {\r\n        const pre_request = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-url-encoded',\r\n                'Authorization': 'Basic QVRnVVNHM1BWMVRnWDZpdXhhNlRFYjlsYWw4YnpUMlFSalgtdkhLTk4yZktuNW9RR1hUcW1zeFBiQW4tbTlOM1FBUjlSdnltaGVGWVJKdmQ6RURxV0NET3hDaVY5Yk5wcW9CUmR2NWZ0SHBKcHQ4Z1ktdEpxWVpLOGpJWU5TaGs4a3RvbDJJMTQ0NnVIVzlCQkh6b1VmR0puUFFZQkhza0Q=',\r\n            }\r\n        };\r\n        pre_request.body = \"grant_type=client_credentials\";\r\n        let access_token = \"\";\r\n        await fetch('https://api.sandbox.paypal.com/v1/oauth2/token', pre_request).then((response) => response.json()).then((responseData) => {access_token=responseData['access_token']});\r\n        let x = {\r\n        \"sender_batch_header\": {\r\n            \"sender_batch_id\": Date.now(),\r\n                \"email_subject\": \"You have a payout!\",\r\n                \"email_message\": \"You have received a payout! Thanks for using our service!\"\r\n        },\r\n        \"items\": [\r\n            {\r\n                \"recipient_type\": \"EMAIL\",\r\n                \"amount\": {\r\n                    \"value\": this.state.balance,\r\n                    \"currency\": \"USD\"\r\n                },\r\n                \"note\": \"Thanks for your patronage!\",\r\n                \"sender_item_id\": Date.now(),\r\n                \"receiver\": email\r\n            }]};\r\n\r\n        const request = {\r\n            method: 'POST',\r\n            headers: {'Authorization': 'Bearer ' + access_token, 'Content-Type': 'application/json'}\r\n        };\r\n        if (x) {\r\n            request.body = JSON.stringify(x);\r\n        }\r\n        const balance_response = await fetch(`https://borrow-java.herokuapp.com/users/` + this.props.user);\r\n        const json = await balance_response.json();\r\n        let old_balance = json['balance'];\r\n\r\n        await fetch('https://api.sandbox.paypal.com/v1/payments/payouts', request).then((response) => {\r\n            if (response.ok) {\r\n                this.setState({balance: 0});\r\n                alert(\"Funds withdrawn!\");\r\n                let formData = new FormData;\r\n                formData.append(\"amount\", -old_balance);\r\n                fetch(\"https://borrow-java.herokuapp.com/users/\" + this.props.user,\r\n                    {method: \"PUT\", body: formData});\r\n            }\r\n        });\r\n    }\r\n\r\n    async addFunds() {\r\n        this.setState({payPal:true});\r\n        let user = this.props.application.state.user;\r\n\r\n        let formData = new FormData;\r\n        formData.append(\"amount\", this.amt);\r\n        fetch(\"https://borrow-java.herokuapp.com/users/\"+user, { method: \"PUT\", body: formData});\r\n\r\n        let payField = document.getElementById(\"payAmt\");\r\n        payField.value = 0;\r\n    }\r\n\r\n    async getUserBalance(userID) {\r\n        const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n        const json = await response.json();\r\n        this.setState({balance:json['balance']});\r\n\r\n        window.setTimeout(() => { this.getUserBalance(userID); }, 200);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserImage(this.props.user);\r\n        this.getUserBalance(this.props.application.state.user);\r\n    }\r\n\r\n\r\n    async getUserImage(userID) {\r\n        const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n        const json = await response.json();\r\n        this.setState({profile:json['img']});\r\n        window.setTimeout(() => { this.getUserImage(userID); }, 200);\r\n    };\r\n\r\n    render() {\r\n    return(\r\n      <Container>\r\n      <Divider />\r\n      <Image src={`data:image/jpeg;base64,${this.state.profile}`}  size='medium' circular />\r\n\r\n      <Grid  centered columns = {2} divided>\r\n      <Grid.Row>\r\n      <Grid.Column>\r\n      <Header as='h1'>{this.props.application.state.accountid} + {this.state.balance} </Header>\r\n\r\n            <input\r\n                type='file'\r\n                accept='image/jpeg, image/png'\r\n                name='image'\r\n                id='file'\r\n                onChange={this.uploadFile}\r\n            />\r\n            <Button onClick = {() => {this.handleSubmit();}}>Submit Profile Picture </Button>\r\n\r\n            <div style={!this.state.payPal ? {'display': 'none'} : {}}>\r\n                <h1>Adding ${this.amt} to your account</h1>\r\n                <PayPalButton\r\n                    amount={this.amt}\r\n                    onSuccess={(details, data) => {this.handlePayment(data, details)}}\r\n                    options={{\r\n                        clientId: \"ATgUSG3PV1TgX6iuxa6TEb9lal8bzT2QRjX-vHKNN2fKn5oQGXTqmsxPbAn-m9N3QAR9RvymheFYRJvd\"\r\n                    }}/>\r\n            </div>\r\n\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Header as='h2'>Balance:  {this.state.balance}</Header>\r\n            <Form.Field>\r\n                <Input type='text' id=\"email\" placeholder=\"example@gmail.com\"\r\n                       onChange={()=>{this.email = document.getElementById('email').value}}/>\r\n                <Button onClick={()=> this.withdrawFunds(this.email)}>Withdraw Funds</Button>\r\n            </Form.Field>\r\n\r\n          <Form.Field>\r\n\r\n          <Input style={this.state.payPal ? {'display': 'none'} : {}} id=\"payAmt\" placeholder=\"$0.00\" type=\"number\" onChange={()=>{this.amt = document.getElementById('payAmt').value}}/>\r\n          <Button style={this.state.payPal ? {'display': 'none'} : {}} onClick={()=>{this.setState({payPal: this.amt !== 0})}}>ADD FUNDS</Button>\r\n          </Form.Field>\r\n\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      </Grid>\r\n      <Divider />\r\n\r\n      </Container>\r\n\r\n  )\r\n  }\r\n}\r\n\r\nexport class TheirAccount extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {profile:'', balance:0}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserImage(this.props.user);\r\n        this.getUserBalance(this.props.application.state.user);\r\n    }\r\n\r\n    updateBalance(user, amt) {\r\n        let formData = new FormData;\r\n        formData.append(\"amount\", amt);\r\n        fetch(\"https://borrow-java.herokuapp.com/users/\"+user, { method: \"PUT\", body: formData});\r\n    }\r\n\r\n    payUser() {\r\n        var curUser = this.props.application.state.user;\r\n        var profUser = this.props.application.state.accountid;\r\n        let payField = document.getElementById(\"payAmt\");\r\n        var amt = payField.value;\r\n        payField.value = 0;\r\n\r\n        if (this.state.balance < amt) {\r\n            alert(\"Your Balance is too low!\");\r\n        } else {\r\n            this.updateBalance(curUser, -1*amt);\r\n            this.updateBalance(profUser, amt);\r\n            alert(\"Paid\");\r\n        }\r\n\r\n    }\r\n\r\n    async getUserImage(userID) {\r\n        const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n        const json = await response.json();\r\n        this.setState({profile:json['img']});\r\n\r\n        window.setTimeout(() => { this.getUserImage(userID); }, 200);\r\n    }\r\n\r\n    async getUserBalance(userID) {\r\n        const response = await fetch(`https://borrow-java.herokuapp.com/users/${userID}`);\r\n        const json = await response.json();\r\n        this.setState({balance:json['balance']});\r\n\r\n        window.setTimeout(() => { this.getUserBalance(userID); }, 200);\r\n    }\r\n\r\n    render () {\r\n        return(\r\n\r\n          <div>\r\n              <Image src={`data:image/jpeg;base64,${this.state.profile}`} wrapped ui={false} height={100} width={100}/>\r\n              <h1>{this.props.application.state.accountid} </h1>\r\n              <input id=\"payAmt\" placeholder=\"$0.00\" type=\"number\"/>\r\n              <button onClick={()=>{this.payUser()}}>PAY ME</button>\r\n              <Grid.Column>\r\n                  <Header> Renter Rating </Header>\r\n                  <RatingRun userID={this.props.user} seller = {0}/>\r\n                  <Modal trigger={<Button>Show Renter Reviews</Button>}>\r\n                      <Modal.Content>\r\n\r\n                          <FeedbackList seller={0} userID={this.props.user}></FeedbackList>\r\n                      </Modal.Content>\r\n\r\n                  </Modal>\r\n\r\n                  <Header> Rentee Rating </Header>\r\n                  <RatingRun userID={this.props.user} seller = {1}/>\r\n\r\n                  <Modal trigger={<Button>Show Rentee Reviews</Button>}>\r\n                      <Modal.Content>\r\n                          <FeedbackList seller={1} userID={this.props.user}></FeedbackList>\r\n                      </Modal.Content>\r\n\r\n                  </Modal>\r\n\r\n\r\n              </Grid.Column>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Feedback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Card>\r\n      <Card.Content>\r\n      <Rating icon='star' defaultRating={this.props.rating} maxRating={5} size = 'large' disabled/>\r\n      </Card.Content>\r\n      <Card.Content description={`${this.props.review}`}/>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nclass FeedbackController {\r\n  static async getDataFromServer(path) {\r\n    let feedbacks = new Array();\r\n    const response = await (await fetch(path)).json();\r\n    response.forEach((feedback) => {\r\n      feedbacks.push(new FeedbackModel(feedback.rating, feedback.review, feedback.seller));\r\n    });\r\n    return feedbacks;\r\n  }\r\n\r\n  static postDataToServer = (formData, userID) => {\r\n    var object = {};\r\n    formData.forEach((value, key) => {object[key] = value});\r\n    var json = JSON.stringify(object);\r\n    return fetch(`https://borrow-java.herokuapp.com/users/${userID}/feedback`, { method: \"POST\", body: formData});\r\n  }\r\n}\r\n\r\nclass FeedbackModel {\r\n  constructor(rating, review, seller, id) {\r\n    this.id = id;\r\n    this.rating = rating;\r\n    this.review = review;\r\n    this.seller = seller;\r\n  }\r\n}\r\n\r\nexport class FeedbackList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { feedbacks: [], seller : this.props.seller };\r\n  }\r\n\r\n  async getDataFromServer() {\r\n    let path = `https://borrow-java.herokuapp.com/users/${this.props.userID}/feedback`;\r\n    let feedbacks = await FeedbackController.getDataFromServer(path)\r\n    this.setState({feedbacks: feedbacks});\r\n  }\r\n\r\n  toggleBuyerSeller () {\r\n    if (this.state.seller == 1) {\r\n      this.setState({seller : 0})\r\n    } else {\r\n      this.setState({seller : 1})\r\n    }\r\n    this.getDataFromServer();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataFromServer();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Header>Reviews</Header>\r\n        <List>\r\n          {this.state.feedbacks\r\n            .filter(feedback => feedback.seller == this.state.seller)\r\n            .map(feedback => <Feedback key={feedback.id} rating={feedback.rating} review={feedback.review}/>)}\r\n        </List>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nclass AddFeedback extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {showForm : false, rating: this.props.rating, review: '', seller: this.props.seller};\r\n    this.formData = new FormData;\r\n  }\r\n\r\n  async handleSubmit(userID) {\r\n    this.formData.append('rating', this.state.rating);\r\n    this.formData.append('review', this.review);\r\n    this.formData.append('seller', this.state.seller);\r\n    await FeedbackController.postDataToServer(this.formData, userID);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Header as='h2' icon>\r\n        <Icon name='settings' />\r\n        Add a review!</Header>\r\n        <Form onSubmit={() => {this.handleSubmit(this.props.userID);}}>\r\n          <Form.Field required>\r\n            <label>Review:</label>\r\n            <Input\r\n              type='textarea'\r\n              id='review'\r\n              rows='3'\r\n              onChange={()=>{this.review = document.getElementById(\"review\").value}}/>\r\n          </Form.Field>\r\n          <Form.Button content='Submit'/>\r\n        </Form>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Button, Container, Grid, Modal, Segment} from \"semantic-ui-react\";\r\nimport {Chat} from \"./ItemList\";\r\n\r\nclass ChatModel {\r\n    constructor(chatID, messages, user1ID, user2ID, lastMessage, U1Seen, U2Seen) {\r\n        this.chatID = chatID;\r\n        this.messages = messages;\r\n        this.user1ID = user1ID;\r\n        this.user2ID = user2ID;\r\n        this.lastMessage = lastMessage;\r\n        this.U1Seen = U1Seen;\r\n        this.U2Seen = U2Seen;\r\n    }\r\n}\r\n\r\nexport class Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { chats: [] };\r\n    }\r\n\r\n    async getDataFromServer() {\r\n        let chats = new Array();\r\n        const response = await (await fetch(\"https://borrow-java.herokuapp.com/chat/user/\" + this.props.user)).json();\r\n        response.forEach((chat) => {\r\n            chats.push(new ChatModel(chat.chatID, chat.messages, chat.user1, chat.user2, chat.lastMessageTime, chat.lastU1seen, chat.lastU2seen));\r\n        });\r\n        this.setState({chats:chats});\r\n        window.setTimeout(() => { this.getDataFromServer(); }, 200);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDataFromServer();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{marginTop: '10px'}}>Messages</h2>\r\n                {this.state.chats.map(chat => <ChatStub chat={chat} user={this.props.user}/>)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass ChatStub extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={messageOpen:false};\r\n        this.seen = false;\r\n\r\n        this.otherUser = this.props.chat.user1ID;\r\n        if (this.props.chat.user1ID === this.props.user) {\r\n            this.otherUser = this.props.chat.user2ID;\r\n        }\r\n\r\n        this.displayMessage = this.props.chat.messages.substring(this.props.chat.messages.lastIndexOf(\":\") + 1);\r\n\r\n        this.seen = true;\r\n        if (this.props.user === this.props.chat.user1ID && this.props.chat.U1Seen < this.props.chat.lastMessage) {\r\n            this.seen = false;\r\n        } else if (this.props.user === this.props.chat.user2ID && this.props.chat.U2Seen < this.props.chat.lastMessage) {\r\n            this.seen = false;\r\n        }\r\n\r\n        this.lastMessageTime = new Date(parseInt(this.props.chat.lastMessage));\r\n        this.hours = this.lastMessageTime.getHours() % 12 == 0 ? 12 : this.lastMessageTime.getHours() % 12;\r\n        this.minutes = this.lastMessageTime.getMinutes();\r\n        this.pmam = this.lastMessageTime.getHours() > 11 ? 'AM' : 'PM';\r\n    }\r\n    render() {\r\n        return(\r\n            <div  style={{ 'cursor': 'pointer', 'marginTop': '10px', 'fontWeight': this.seen ? 'normal': 'bold' }}>\r\n                <Modal\r\n                    open={this.state.messageOpen}\r\n                    trigger={\r\n                        <Segment onClick={()=> {this.setState({messageOpen:true});}}>\r\n                            <div>\r\n                                <p>{this.otherUser}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p>{this.hours}:{this.minutes} {this.pmam}</p>\r\n                                <p>{this.displayMessage}</p>\r\n                            </div>\r\n                        </Segment>\r\n                    }\r\n                >\r\n                    <Container>\r\n                        <Chat closeModal={() => {this.setState({messageOpen: false}); this.seen = true}} application={this.props.application} user2={this.otherUser} user1={this.props.user}/>\r\n                    </Container>\r\n              </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { SignIn, ItemList, ContentComponent, Navbar } from './ItemsComponents';\r\nimport { Image, Button, Container } from 'semantic-ui-react';\r\nimport { MyAccount } from './AccountPage.js'\r\nimport {TheirAccount} from \"./AccountPage\";\r\nimport {Messages} from \"./MessagePage\";\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {signedIn:false, user:null, searchQuery: '', account: false, accountid: null, maxPrice: '', onMessagePage: false }\r\n  }\r\n\r\n  render() {\r\n    if (!this .state.signedIn) {\r\n        //sign in page\r\n      return (\r\n        <div style={{paddingTop: '5px'}}>\r\n          <Header/>\r\n          <SignIn application={this}/>\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      if(this.state.account && this.state.accountid === this.state.user) {\r\n        return (\r\n            //my account page\r\n          <Container style={{paddingTop: '5px'}}>\r\n            <Navbar application={this} user={this.state.user}/>\r\n            <MyAccount application = {this} user={this.state.accountid}/>\r\n            <ItemList searchQuery={this.state.searchQuery} maxPrice={this.state.maxPrice} application={this} user={this.state.accountid}/>\r\n          </Container>\r\n\r\n        );\r\n      } else if (this.state.account && this.state.accountid !== this.state.user) {\r\n          return (\r\n              //their account page\r\n              <Container style={{paddingTop: '5px'}}>\r\n                  <Navbar application={this} user={this.state.user}/>\r\n                  <TheirAccount application = {this} user={this.state.accountid}/>\r\n                  <ItemList searchQuery={this.state.searchQuery} maxPrice={this.state.maxPrice} application={this} user={this.state.accountid}/>\r\n              </Container>\r\n\r\n          );\r\n      } else if (this.state.onMessagePage) {\r\n          //message page\r\n          return (\r\n              <Container style={{paddingTop: '5px'}}>\r\n                  <Navbar application={this} user={this.state.user}/>\r\n                  <Messages user={this.state.user}/>\r\n              </Container>\r\n          )\r\n\r\n      } else {\r\n        return (\r\n            //main page\r\n          <Container style={{paddingTop: '5px'}}>\r\n            <Navbar application={this} user={this.state.user} />\r\n            <ItemList searchQuery={this.state.searchQuery} maxPrice={this.state.maxPrice} application={this} user={null}/>\r\n          </Container>\r\n\r\n        );\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <Container textAlign = \"center\">\r\n      <h1>Borrow</h1>\r\n      <h4><small>Peer to peer, cloud based, clothing rental built with AI solutions.</small></h4>\r\n    <br></br>\r\n    </Container>\r\n  </header>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}